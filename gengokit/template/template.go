// Code generated by go-bindata.
// sources:
// NAME-service/cmd/NAME/main.gotemplate
// NAME-service/cmd/NAME-server/main.gotemplate
// NAME-service/datastore/NAME_errors.gotemplate
// NAME-service/datastore/NAME_manager.gotemplate
// NAME-service/datastore/NAME_mongo_manager.gotemplate
// NAME-service/datastore/datastore.gotemplate
// NAME-service/datastore/mongo.gotemplate
// NAME-service/handlers/handlers.gotemplate
// NAME-service/handlers/hooks.gotemplate
// NAME-service/handlers/middlewares.gotemplate
// NAME-service/svc/client/cli/handlers/handlers.gotemplate
// NAME-service/svc/client/grpc/client.gotemplate
// NAME-service/svc/client/http/client.gotemplate
// NAME-service/svc/endpoints.gotemplate
// NAME-service/svc/server/cli/cli.gotemplate
// NAME-service/svc/server/run.gotemplate
// NAME-service/svc/transport_grpc.gotemplate
// NAME-service/svc/transport_http.gotemplate
// DO NOT EDIT!

package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cmdNameMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x57\x5f\x73\xdb\x36\x12\x7f\x26\x3f\xc5\x86\xd3\x5c\x48\x97\xa1\x9c\xce\xdd\x8b\x52\x3d\xa4\x76\x3a\x97\x99\xd6\xf1\x58\x6a\xfa\xe0\x7a\x6e\x20\x70\x49\xe2\x02\x01\x0c\x00\x4a\xf6\x68\xf4\xdd\x6f\x16\x80\x68\x3a\xb5\xe3\x76\x2e\x0f\x11\x08\xec\xfe\x76\xb1\x7f\x7e\x0b\xcf\x66\x70\xa6\x6b\x84\x16\x15\x1a\xe6\xb0\x86\xf5\x1d\x38\x33\x58\x5b\xc1\xf9\x47\xb8\xf8\xb8\x82\xf7\xe7\x1f\x56\x55\x3a\x9b\xc1\x15\x9a\x41\x29\xa1\xda\x20\x00\x3b\x21\x25\xe8\x2d\x9a\x9d\x11\x0e\xc1\x75\xc2\x42\x23\x24\x7a\xe1\x4f\x68\xac\xd0\x6a\x0e\xfb\x7d\x15\xd7\x87\xc3\xe4\x00\xce\x99\xc3\xe9\x29\x7d\x1f\x0e\x69\xda\x33\xfe\x99\xb5\x08\x1b\x26\x54\x9a\x8a\x4d\xaf\x8d\x83\x3c\x4d\x32\x54\x5c\xd7\x42\xb5\xb3\xff\x5a\xad\xb2\x34\xc9\x1a\xc9\x5a\xff\xbb\x71\xf4\xa3\x2d\xfd\x6f\x9d\xe1\x5a\x6d\xe3\x52\xa8\xd6\xef\x3a\xb1\xc1\x2c\x4d\x93\x8c\x6b\xe5\xf0\xd6\xcb\xb7\x5a\xb7\x12\xab\x56\x4b\xa6\xda\x4a\x9b\x76\xd6\x9a\x9e\x7b\xa9\x56\xb8\x6e\x58\x57\x5c\x6f\x66\xfd\xe7\x76\x86\xc6\x68\x63\xe9\x64\x36\x83\x15\x5d\x73\x89\x66\x2b\x38\xa6\x49\xb6\xdf\x57\x1f\xbc\x8f\x97\xcc\x75\xf0\xfa\x70\x80\x99\xdd\xf2\x19\x97\x02\x95\xa3\x9f\x59\xc7\x54\x2d\x91\xf4\x13\x32\x10\x4e\xe0\x19\xc5\xe0\x4a\xd2\x39\xd7\xff\x35\x05\x92\xcc\xd2\xa4\x5f\x7b\xc1\xcb\x9f\x1e\x8a\x66\x69\x91\xa6\x5b\x66\x28\x90\xff\x81\x05\xc4\x28\x55\x97\xcc\x58\xfc\xa0\xdc\xb8\x4b\x01\xab\x96\xbd\x14\x71\x8b\x62\x5d\x9d\xe9\x4d\xcf\x78\xdc\x09\xc1\xa8\x7e\x37\xac\x6f\xc2\x4e\xbf\xae\xae\xb0\x15\xd6\xa1\xd9\xef\xab\x18\x9a\xea\x82\x6d\xf0\x70\xa0\x2f\x34\x64\xbd\x19\x14\xf7\x49\xcd\x0b\xd8\xa7\x89\xb6\xd5\xfb\x5b\xe1\x72\x3b\xac\xc3\x66\x91\x1e\xd2\xd4\xdd\xf5\x08\x1d\xb2\x1a\xcd\x12\x8d\x40\x0b\xd7\x37\xc1\xab\x08\x90\x77\x70\x32\x3d\x2f\x60\x89\x2e\xdf\x32\x19\x9d\x2f\x82\x7f\x64\x81\x6b\x65\x1d\x18\xfc\x32\x08\x83\xf5\x25\x33\xce\x82\x50\x0e\x16\xf0\x43\x9a\xf4\xfe\x73\xfe\xd5\x9d\x2f\x08\xa9\x84\x6c\x9e\x95\x0f\x15\x8b\x34\x11\x0d\x48\x54\xb9\x57\x2c\xe0\xc5\xe2\x2b\xe4\x7d\x9a\x24\x06\xdd\x60\x14\x34\x1b\x57\xbd\x27\x2f\x9a\x3c\xdb\x32\x39\x20\xbc\xfc\x02\x9c\x29\xa5\x1d\xac\x11\x2c\x59\x02\xa1\xc0\xed\xf4\x5b\xd8\x0c\xd6\x01\x55\x25\x13\x0a\x98\x03\x89\xcc\x3a\xd0\x0a\xe1\xd5\xfc\x15\xf0\x8e\x19\xc6\x1d\x9a\xac\x84\x2d\x93\x45\x9a\x1c\xa2\xef\xd7\x6f\x6e\x26\x19\x5b\x19\xb1\x59\xf6\x8c\x63\x7e\x3c\x2c\xd2\xe4\xa4\x83\x05\xb0\xbe\x47\x55\xe7\x27\x5d\x09\xfe\xa8\xaa\xaa\x22\x3d\x7a\xaa\x84\xa4\xa8\x3f\x15\x59\x0f\x9e\x17\xd1\x0a\x5d\x71\x72\xc3\x65\x6f\x84\x72\x4d\x9e\xbd\xdc\x66\xe5\x98\xa6\xfc\xa4\x0b\x99\x9c\xcd\x20\xa6\x16\xf0\x56\x58\x67\xc1\x69\x60\xdc\x01\xb3\xe0\x3a\x04\xb2\xe9\x84\x56\x4c\xfa\xa2\x28\x61\x3d\xb8\xc0\x28\xd1\x06\xde\x0a\x0a\x4c\x8d\xa4\x49\x70\xa4\xc5\xb8\x1b\xa2\x06\x08\x65\x1d\xb2\x1a\x74\x03\x9c\x49\x49\x1e\xc6\xa2\x82\x5a\x18\xe4\x4e\xde\x55\xa1\x5b\x85\x85\x9a\x22\x4a\x1e\x48\xa9\x77\x47\xb4\x1a\x1b\x34\x58\x8f\xbe\x78\x1f\xd7\xe8\xe1\xb0\x2e\xc1\x0a\xc5\x11\x44\x33\xe2\xee\x3a\x34\xc7\xe3\xd1\x08\xa1\x35\x46\x6f\x22\x01\x46\xac\x12\x14\x99\xd4\xcd\x13\x96\x2c\x3a\x18\x7a\xcf\xb6\x53\x35\x02\xdb\xe9\x41\xd6\xf7\x7e\x54\x21\x3f\x63\xa3\xf8\x22\xde\xa7\x09\xb5\x73\x48\x98\x7d\xd0\x32\x69\x42\xc4\x58\x7d\x62\x26\xff\x47\x3c\x2f\x21\x0b\xab\xac\x84\xec\xdf\x7e\x95\xdb\x22\xde\xd6\x12\xbb\x50\x39\x76\x08\xce\x30\x65\x03\xe3\x36\x9a\x42\x65\x81\xff\x76\xf5\x0b\x58\x77\x27\xb1\xc8\x8a\x60\x35\x4f\x13\xcf\x4c\xef\xea\xda\x40\xf8\xb7\x00\x6f\x34\x96\x4c\x46\xa7\x15\xab\x6b\x6f\xd0\x1b\x5d\xad\x2e\x81\x36\xd0\x5a\x0a\x0a\xab\x6b\xbb\xe5\x04\xe8\x49\xf1\x69\x24\x3a\x1d\x91\xe6\xff\x3a\xfd\xe7\x29\x2d\xda\xab\xcb\x33\xc8\x09\xb4\x78\x1c\xb5\x38\x92\x35\xd2\x26\x97\x02\x7a\x83\x76\xd8\xa0\x05\xa5\xc1\x06\x8e\x82\x5a\x58\x4e\x03\xec\x0e\xec\x9d\x75\xb8\x29\x81\xa9\x1a\xf0\xb6\x47\xee\x2c\x0c\x96\x42\xeb\xb4\x47\xea\x8d\xde\x8a\x1a\x43\x36\x7d\xe6\x1f\x18\x56\x47\xcc\x58\x72\xc1\x5a\x4f\x29\xa5\xf2\x33\xd8\x48\xe4\x34\x5e\x85\xf2\x70\x04\x43\x5e\xad\x85\x62\xe6\xce\x9b\xf5\xf1\x0f\xdb\x94\x91\x38\x07\xed\xdc\x6f\xbe\x1e\x33\xe3\x83\xe1\x63\x64\x3d\x12\xa9\x6e\x99\x11\x7a\xb0\x47\x55\xcf\x7c\x66\xe0\x4e\x1b\x0b\x6b\xed\xba\x78\x25\xe8\xb4\x75\x73\x9f\xde\x23\x71\xa4\x69\xb2\xdf\x83\x61\xaa\x45\xf8\x6e\x83\xae\x2b\xe1\x3b\x66\x5a\x4f\x8d\xd5\x99\x87\x7b\x67\x5a\x5b\xfd\x8a\xae\xa3\x05\x1c\x0e\x69\x92\x34\x76\xbf\xf7\xd2\x87\x03\x09\xfa\x84\x5d\xe0\xee\x67\xc9\x5a\xa2\xe3\x6c\xbf\x5f\xe9\x5f\xf4\x0e\x0d\x44\xa9\xac\x0c\x42\xd4\x45\x1f\x95\x27\xc7\x82\x2c\xa3\xaa\x69\xe6\x8f\x55\xb5\xdf\x4f\x8d\xbe\x93\x92\x20\x2d\xd9\xa4\x84\x7a\x88\xdf\x2c\xbd\x0e\x16\xbe\x63\xc2\x28\x49\x88\x8e\x7e\x8e\x74\xa4\x6d\xb5\x74\x35\x1a\x53\x42\x16\x44\x75\x03\x2f\xed\xfc\x0f\x95\x95\xd4\xc7\x04\x7c\x7d\x4a\xf4\x18\xe0\x2e\x49\xed\x1c\x1b\x36\x48\x67\xf3\xe2\x1b\x68\x7f\xa8\xec\x5b\xc7\xcb\x61\xcd\xf5\x66\xc3\x54\xed\x8d\x15\xfe\x36\x7f\x23\xb0\xaf\x7d\x64\x9f\x84\x07\x78\x69\xfd\x1d\x1e\x09\x6e\xb0\x85\xaa\x0e\x20\x87\x71\x58\xc5\xfb\x16\xf0\x23\xfc\x10\x22\x35\x46\xd0\x5f\x35\x52\xed\x1b\xd2\x89\xe1\xf5\x2f\x82\xbc\x98\xe4\xe4\xd8\x2c\xfd\xba\x7a\x6a\xbc\x27\x09\x9a\xd0\xbf\x7e\xfa\x86\x6c\x89\x06\x4e\x46\x96\x78\xb1\x80\x2c\xf3\x2e\x44\xb8\x92\x44\x61\x01\xf7\x2f\x1c\xaa\xa0\x7c\xd4\x28\xa7\x27\x67\xee\xf6\x13\x0d\x52\xbb\xd2\x4b\x9a\x66\x91\xd6\x68\x96\xd1\x48\x04\x94\xd6\xf3\xf4\xc9\xc8\x25\xf7\xf6\xb8\x56\x2a\x18\x9b\x2f\xc0\xb3\xc9\xb9\x60\x32\x1f\x45\xcb\xb0\xf9\xbb\x70\xdd\x07\x65\x91\x0f\x06\xf3\x62\xb2\xb9\x12\x1b\xd4\x83\xcb\xe9\x09\x59\x2d\x91\x6b\x55\x93\x51\xba\x1e\x81\xbe\x58\xd0\x14\xf5\x96\x9e\xcc\x9d\xaf\x77\xd8\x75\x42\x12\x77\x30\x3f\xaa\x08\x9f\x1a\x55\xa1\xe7\xfd\x39\xf8\x31\x8a\x86\xfa\x62\x9a\x18\xca\x66\xe2\xc7\x87\x97\xae\xce\xa4\xb6\x21\x79\x5f\x05\xf2\xfe\x6d\xe9\x03\x19\xae\x3d\xd9\xfc\x4b\x31\xfc\x56\x37\xf9\xd4\xce\x89\x3e\x0d\x6e\xb4\xc3\x91\xff\x6c\x8f\x5c\x34\x02\xeb\x58\xf6\xd3\xaa\x7a\x24\x4c\xcf\xe0\xbf\xdc\xfa\x32\x8f\x91\x78\x58\xa1\xb1\xac\x7d\xa1\x52\x61\xe7\x05\x95\xf6\x9b\x11\xf6\x32\x3e\x49\x2e\x34\xbc\xa2\xde\xd0\xf5\x2b\x9a\x9b\xb1\x2f\x8f\x1c\x5e\xbf\xf5\x8f\x0b\xa1\xda\x2a\x2b\x9e\x6b\x0a\xee\x6e\xa9\x70\xe2\xdf\x0d\xd5\x4f\x8c\x7f\x6e\x8d\x1e\x54\x4d\xb2\x8d\x36\x20\xe8\xf8\xf4\x2d\x08\xf8\xd1\x3b\x17\xe3\x5a\xd0\xce\xf7\x8b\xd8\x77\x84\x72\x0f\x42\x65\xe5\x73\x91\x73\x77\x5b\x1e\x87\xf8\xb5\xb8\x99\xac\xbf\xf7\x4f\x38\xf2\xc0\xee\x84\xe3\x1d\x4c\x2e\x7d\x7d\x7a\x43\xa8\x7f\x87\x5e\x3c\xb9\x70\x66\xf1\x31\xfe\x98\xfb\xe2\xbd\xe7\xf4\x48\x02\x53\x8b\x6f\xe6\x37\xd4\xd3\xc4\x33\xde\x4e\xf5\x2b\x33\xb6\x63\x23\x3f\x87\xa2\xfd\x32\xa0\x75\x63\xb3\x1d\xff\xf0\xa9\x46\xe0\xfc\xa8\x7d\xc6\xa4\x0c\x6e\xf9\x72\x7f\xa4\x97\x9e\x69\xa6\xe3\x8b\xef\xcf\x36\xbe\xae\xa0\x07\xcd\x94\x04\x4f\xb7\xa3\x8f\xc7\xa9\x7d\xef\xa2\x4f\x49\xbc\xca\xff\xe9\xdc\x9f\xc0\x9f\xf3\x2d\x99\x94\xb1\x54\x79\x16\x12\x09\x57\xc1\x1b\xac\x61\x27\x5c\x37\xf7\x45\xfb\x40\xf0\x89\xb0\x3e\xc0\x0a\x54\x0d\x57\x68\x7b\xad\xea\xa7\xb1\xb6\x93\xc1\x4c\xc4\x43\x83\x71\xfe\x5c\x97\xc4\xaf\xd3\xf4\x90\xfe\x2f\x00\x00\xff\xff\x4e\x91\xa6\x1c\x52\x10\x00\x00")

func cmdNameMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGotemplate,
		"cmd/NAME/main.gotemplate",
	)
}

func cmdNameMainGotemplate() (*asset, error) {
	bytes, err := cmdNameMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.gotemplate", size: 4178, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cmdNameServerMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xb1\x6e\x83\x40\x0c\x86\x67\xfc\x14\xbf\x98\x60\xe8\xdd\xde\x35\xe9\x90\xa5\x89\xd2\xb4\xfb\x05\x0c\x58\x25\x47\xe4\x3b\x88\x22\x74\xef\x5e\x41\xaa\x2a\x5b\x27\xdb\xfa\x3f\xe9\xb3\x6d\x2d\x36\x43\xcd\x68\xd9\xb3\xba\xc8\x35\xce\x77\x44\x1d\x43\x30\xd8\xee\xf1\xbe\x3f\xe1\x6d\xbb\x3b\x19\xb2\x16\x47\xd6\xd1\x7b\xf1\xed\x03\xc0\x4d\xfa\x1e\xc3\xc4\x7a\x53\x89\x8c\xd8\x49\x40\x23\x3d\xaf\xf0\x17\x6b\x90\xc1\xbf\x62\x9e\xcd\x6f\x9f\xd2\x53\x80\xad\x8b\xfc\x9c\x2e\x73\x4a\x44\x57\x57\x7d\xbb\x96\x71\x71\xe2\x89\xe4\x72\x1d\x34\xa2\xa0\x2c\x6f\x7a\xd7\xe6\x44\x99\xb5\x38\x2d\xaa\x0f\xd6\x49\x2a\xa6\x2c\x9f\x67\xb3\x5b\xb9\x83\x8b\x1d\x5e\x52\x82\x0d\x53\x65\x03\xeb\xc4\x9a\xff\x07\xd8\xaa\x97\x9c\x4a\xa2\x66\xf4\xd5\xaa\x2d\x4a\xcc\xab\xe7\xf3\x5a\xbb\xc8\x70\x75\xad\x1c\x02\x07\x48\x83\xd8\xf1\x1d\x9d\x9b\x18\x67\x66\xff\x77\x7f\x64\xbf\xbc\x6e\x59\x32\x50\xb6\x14\x73\x70\x1a\xb8\x28\x89\xb2\x87\xc8\x1c\x47\x5f\x54\xbd\x98\xcd\xe0\x1b\x69\x4b\x4a\xf4\x13\x00\x00\xff\xff\x83\x6a\xf2\x2b\x7f\x01\x00\x00")

func cmdNameServerMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameServerMainGotemplate,
		"cmd/NAME-server/main.gotemplate",
	)
}

func cmdNameServerMainGotemplate() (*asset, error) {
	bytes, err := cmdNameServerMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME-server/main.gotemplate", size: 383, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _datastoreName_errorsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8d\xb1\x4e\xc3\x50\x0c\x45\xe7\xf8\x2b\xae\xa2\x0e\xcd\x90\x94\xa1\x0b\x48\x9d\xa0\x4c\x28\x0b\xfd\x01\xab\x71\xab\x88\xf6\x39\xf2\x33\x94\xea\xe9\xfd\x3b\x4a\x02\x08\x98\x58\x8f\x7d\xee\x19\x78\xff\xc2\x47\x41\xc7\xce\xd1\xd5\x84\xa8\x3f\x0f\x6a\x8e\x25\x15\xa5\x98\xa9\xc5\x92\x2a\xa2\x37\xb6\x11\xa5\x64\x1c\x8e\x82\x45\x8f\xbb\x0d\x9a\x07\x76\x7e\x1e\xb5\xdd\x75\x90\x98\x33\x15\x00\xb0\x5a\x21\x25\x2c\xfa\xa6\xe5\xb3\x20\x67\xcc\x3b\xdf\xc7\xf5\xcd\x1a\x35\x5a\x75\x3c\xea\x6b\xe8\x66\xbe\x35\xfb\x25\xb5\xea\xd3\x15\x9b\x4f\xbd\x69\xe5\xb2\x2c\x53\xc2\x4e\x9f\xf4\x22\xf6\x33\x10\xd4\x71\x18\xbf\xcb\x8a\x68\x5c\x2b\xa6\xcc\x2d\x6a\xdc\x6b\x38\x9c\xfa\xbd\xcf\xf8\x6f\x65\xfb\xde\x47\x8f\xff\x6a\xf0\xc9\x84\xbb\x2b\x64\x52\xbe\x42\x29\xd5\x90\xd0\xe5\x4c\xd5\x47\x00\x00\x00\xff\xff\xac\xc0\xd6\x30\x4c\x01\x00\x00")

func datastoreName_errorsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_datastoreName_errorsGotemplate,
		"datastore/NAME_errors.gotemplate",
	)
}

func datastoreName_errorsGotemplate() (*asset, error) {
	bytes, err := datastoreName_errorsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "datastore/NAME_errors.gotemplate", size: 332, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _datastoreName_managerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x51\xc1\x6a\x1b\x31\x10\x3d\x47\x5f\xf1\x30\x39\xec\x06\x47\x0b\x3d\x06\x7a\xa9\xb7\xb4\x86\x36\x09\xb1\xd3\x4b\xe9\x41\xf6\xce\xca\x22\x6b\x49\x8c\x64\x07\x23\xf4\xef\x45\x1b\x07\xdc\x96\x26\x94\xb6\x37\xcd\xbc\xa7\xf7\xe6\xcd\x34\x0d\x66\xae\x23\x68\xb2\xc4\x2a\x52\x87\xd5\x01\x91\x77\x21\x48\xb4\x37\xb8\xbe\x59\xe2\x7d\x3b\x5f\x4a\xd1\x34\xb8\x23\xde\x59\x6b\xac\x7e\x22\xe0\xd1\x0c\x03\xdc\x9e\xf8\x91\x4d\x24\xc4\x8d\x09\xe8\xcd\x40\x23\xf9\x0b\x71\x30\xce\x5e\x21\x25\x79\x7c\xe7\x7c\x02\xa0\x55\x91\x4e\xd1\x52\xe7\x2c\x84\x57\xeb\x07\xa5\x09\x9d\x8a\x2a\x44\xc7\x24\x84\xd9\x7a\xc7\x11\x95\x00\x00\xbf\xc2\x24\x25\x79\xfb\x6e\x3e\x76\x6f\x55\xdc\xe0\x32\xe7\x89\x38\x9b\x68\xe7\x1f\xb4\x34\xb6\xd9\x6a\x27\xf7\x6f\x26\xa2\x16\x22\x1e\x3c\x15\x97\x05\xf1\xde\xac\x49\x5e\xab\x2d\xe5\xfc\x59\x59\xa5\x89\x61\x6c\x24\xee\xd5\x9a\x90\xc4\xd9\xcc\xd9\xde\xe8\x1d\x53\x55\x0b\x71\xf6\xcb\x9f\x45\x19\x86\x45\xfe\x9d\xe6\x13\xfe\x83\x64\x4a\xac\xac\x26\x9c\x1b\x5c\xbd\x85\x6c\x55\x54\x23\x6b\x79\xf0\x14\x72\x1e\xf3\x94\x0b\xdc\xdd\xb7\xe8\x1d\x23\x25\x9c\x9b\xa3\x1c\xb6\x14\x82\xd2\x34\x92\x3e\x99\x10\x4f\xc1\x2a\x50\x08\xb8\x28\x39\x17\x14\xca\xfa\x52\x82\xe9\x0b\xe1\xa3\x0a\x8b\xf5\xc6\xb9\x61\xde\x21\xe7\x29\xc2\x73\x11\x22\x1b\xab\x53\x02\xd9\x82\xd4\xa8\xbe\x7e\xbb\xf0\x2b\x79\xaa\x3b\x05\x31\x3b\xae\x47\xd3\x19\x93\x8a\xf4\xb2\xed\x14\x1e\x3f\x69\xd4\xa8\x5e\x52\xfd\x40\xff\x3a\xc9\x14\xe6\xb9\xf7\x8a\xf7\xbd\xef\x5e\x4d\xf4\x37\xf6\x7f\xbe\x8d\x96\x06\xfa\x9f\x13\xd5\xa8\x8e\x6e\x29\x5d\x16\x38\x67\x91\xc5\xf7\x00\x00\x00\xff\xff\x06\x4e\xe5\x56\xf6\x03\x00\x00")

func datastoreName_managerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_datastoreName_managerGotemplate,
		"datastore/NAME_manager.gotemplate",
	)
}

func datastoreName_managerGotemplate() (*asset, error) {
	bytes, err := datastoreName_managerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "datastore/NAME_manager.gotemplate", size: 1014, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _datastoreName_mongo_managerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x41\x6f\xdb\xb8\x12\x3e\x8b\xbf\x62\x2a\x14\xaf\x52\xe0\x4a\xc0\x3b\xfa\xc1\x87\x26\x4e\xde\x1a\xbb\xed\x76\x37\xcd\xee\xa1\x28\x16\xb4\x34\x96\x89\xc8\x24\x33\xa4\xd2\x1a\x82\xfe\xfb\x82\x94\xec\xd8\x6e\x14\x27\x4d\xbc\x6d\xd1\xcd\x25\x26\x39\x24\x67\xc8\xef\xfb\x66\x28\xcd\xb3\x4b\x5e\x20\xe4\xdc\x72\x63\x15\x21\x63\x62\xa1\x15\x59\x88\x58\xa0\xa7\x10\xd6\x75\xf2\xf6\x78\xe2\xbb\xde\x72\x3b\x87\x97\x4d\x13\xb2\x20\x37\x10\x4e\x85\x9d\x56\xd9\x25\xda\x44\x51\x91\x96\x42\x66\x98\xa7\x85\x7a\x39\xc7\x52\x23\x99\x74\xbd\x64\xc8\x82\xb0\x10\x76\x5e\x4d\x93\x4c\x2d\x52\x3d\x55\xb4\xe0\x32\xad\x2a\x91\x87\x2c\x28\x55\x01\x9b\xc3\x46\x50\xa5\x0d\xca\xb4\x54\x05\x55\xc6\x4f\x56\xfa\xb2\x48\x84\x4c\x17\x85\x4a\xae\xff\x7b\x4b\x57\x3a\x35\x4a\x86\x2c\x66\x2c\x4d\xe1\x0f\x24\x31\x5b\x82\x9d\x73\x0b\x47\xef\x40\x2c\x74\x89\x0b\x94\xd6\xc0\x24\x61\xd7\x9c\xe0\x2f\xa8\xeb\xe4\x1c\xe9\x5a\x64\x98\xbc\xe1\x0b\x6c\x9a\xd7\x5c\xf2\x02\x09\x46\x10\x1d\x2d\x94\x2c\x54\xd7\x11\x47\x52\x94\x71\x37\x2b\x37\xc9\x89\x92\x33\x51\x54\xd4\x6f\xea\x3c\xd8\xec\x86\x85\xff\x6f\xc0\xce\xdb\x63\x9e\x72\x83\x50\xf2\x25\x12\xb3\x4b\x8d\xdb\xc6\xc6\x52\x95\x59\xa8\x59\x30\x3e\x86\x23\x17\xdc\xb8\x9b\xc2\x1a\xc6\xea\x9a\xb8\x2c\x10\x9e\x0b\x18\x8e\xc0\x0f\x9d\xbb\x13\x7e\xb7\xd4\x68\x9a\x86\xcd\x2a\x99\x41\x54\xc0\xb6\x5f\x90\xad\x9c\xae\x6b\x78\x2e\xba\x88\xa3\xd8\xed\x92\xb9\x85\x8a\x64\x7c\x9c\x9c\x44\x27\xaa\x2c\x31\xb3\x42\xc9\x4d\xbb\x38\xf9\x53\xd8\x79\xe4\x6d\xce\xd1\x18\xa1\x64\x72\x52\x2a\x89\x51\x1c\xb3\x20\xc7\x19\x12\x64\x6b\x2f\x37\x4d\x0c\x46\x31\x63\x41\x9a\xc2\xa9\x34\x15\x21\x4c\x72\x10\x32\xc7\x4f\xa0\xa4\x3b\x09\x34\x2c\x68\xdb\xc3\x11\xb8\x50\x27\xae\x51\xb3\x20\xf8\x19\x97\x43\xe8\xfe\xde\x7f\x30\x96\x84\x2c\xea\x50\xe4\x61\x33\x60\x41\x70\x21\xc5\x55\x85\xad\x81\xa5\x0a\x5d\xdf\x98\x94\x1e\x57\xda\x0c\x37\xfa\x8e\x79\x76\x59\x90\xaa\x64\x3e\x5c\xf7\x9d\x6b\x4e\x66\x7b\x6e\xc3\x58\x80\x44\xce\x89\x2c\x69\x3d\xf5\x8e\x44\xde\xb7\x98\x05\x62\x06\x6e\xfc\xd9\x08\xa4\x28\xdd\xa1\x39\xcc\xfa\x53\x39\x13\x58\xe6\x26\x72\xcd\xf6\xa7\x1b\x0c\xc2\x8e\x54\xe1\x10\xc2\x1b\x12\x0c\xfc\xd0\x02\xed\x5c\xe5\xe1\x10\x20\xbc\xf5\x56\x3a\xb3\x16\x06\xde\x6c\xf3\x2a\xbb\x51\x24\x52\xe4\x06\x9d\x5f\xc9\xa9\x6b\x45\xb1\x1b\x6a\xe2\xae\x75\xb3\x6f\x77\xe2\xed\x94\x98\x05\x81\xe6\x52\x64\x11\x12\xc5\x6d\xe8\x69\x0a\xf8\xc9\x12\xef\x0c\x67\x8a\xc0\x64\x73\xa5\xca\x49\xee\x1b\x33\x6e\x2c\x12\x94\xc2\x58\x30\xc8\x29\x9b\xaf\x6e\xed\xbe\x97\x36\x80\xb0\x5d\xf1\xc0\x17\xf8\x23\xde\x5f\xc3\xea\xfa\x25\xa0\xcc\x9b\x86\xf5\xd1\x7f\xad\x59\x9e\xf2\xee\xe0\xf6\xe9\x88\xb3\x29\x92\x1e\xd9\xe8\x56\x58\xed\x7a\x0f\x59\x4a\x53\x28\xd0\x9e\x28\x99\x11\xda\xad\xd5\x40\x4d\x2d\x17\xd2\x00\x77\x22\xe5\x87\x61\x6b\x9c\xd0\xa8\x8a\x32\x4c\xfa\x82\xeb\x59\x38\x32\x68\x4c\x2b\xa0\x9d\x22\xd5\x35\x88\x99\x33\xf8\x89\x9b\xf3\x15\xc0\x9b\x66\xb0\x46\x7b\x5d\xbb\x88\x7c\x97\xc8\xa1\xc5\x6f\x0c\x11\xa1\xa9\x4a\x0b\x7a\x9a\x6c\xae\x3f\xf0\x90\xf2\xb7\xe2\x75\x34\x4d\xe1\x44\xe9\x25\x70\x90\xf8\x11\xc6\xc7\x60\xda\x5d\xdd\x9e\x52\x49\x04\xa3\x31\x13\x33\x81\xb9\xc7\xa3\xf7\x6e\x74\x03\xc8\xb6\x0d\xdb\x22\xab\xf4\x32\x72\x37\xde\x6a\xac\x33\x59\xab\xaa\xc7\x7c\xe7\xd9\x68\xd7\xb7\xba\x61\xc1\x55\x85\xb4\x74\xb7\xe1\x12\x63\xf2\xda\xf3\x70\x08\x22\x6f\x58\xd0\x73\x10\xad\x5f\xab\xf6\xb3\x11\x84\xa1\x77\xcd\xaf\xf4\xfe\x86\xc1\x1f\x60\xb4\x36\x73\x7e\x04\xeb\x73\x63\x0f\x48\x27\x2e\x9a\x1b\x6a\x7a\xe9\x3d\x13\x32\x8f\xfc\x6e\x71\xf2\xab\xc4\xe8\x3f\x6d\x7c\xf1\xff\x76\xd9\xdb\x4d\x1a\xb5\xfa\x73\x4a\xf4\x46\xd9\x33\xa7\x12\x7e\x74\x0f\xb9\xef\x62\xf7\x16\xbd\x7b\x80\xb5\xb2\xec\xe5\xb0\x23\xf1\x18\xa7\x55\xb1\x49\x62\xc2\x4c\x51\x0e\x52\x59\x98\x39\x4f\x3d\x93\x03\x42\x5b\x91\x84\x36\xce\x01\x9c\x12\x6d\xee\xb4\x8a\xca\xe9\x02\x7b\x2a\xd1\xba\x33\xaa\x87\x09\xd3\x8d\x24\xed\xc4\x81\x44\x1e\x18\x3b\xdd\x52\x94\xac\x5f\xa4\x7e\x11\xc6\x3e\x92\xc0\x1d\x67\xd7\x78\x5c\x93\xd7\xc0\xfb\x0f\x47\xdf\x20\x81\xd3\x14\xce\x44\xe9\xb2\xeb\x6f\x0e\xf6\x2c\xb8\xda\x60\xec\x17\x30\xf5\x50\x2c\x5d\x25\xd7\x96\xa1\x71\xf2\xaa\x2c\x57\xec\x34\x87\xcb\xaf\xbb\x88\x78\x12\x8c\x4a\x51\xf6\x00\xd4\xec\x43\xe8\x09\x21\xdf\x97\x64\x06\xa0\x77\xd5\xf8\x9b\x4e\x21\x69\x0a\xaf\xca\x52\x7d\xf4\x95\x5e\x5e\xe9\x52\x64\xdc\x22\xb8\xa2\x4b\x9b\x01\x08\xfb\xa2\x7d\xb7\x54\x06\xe9\x85\x71\x27\xa5\x95\x34\x62\x2a\x4a\x61\x97\x60\x55\xf7\xb8\x71\x36\x82\x60\x81\xc6\x74\xf5\x3e\x9f\x96\x08\xea\x1a\x89\x44\x2e\x64\x01\x17\x17\x93\xdc\x78\xbf\x75\x32\xc9\x9d\xdf\x1d\x68\xdb\x26\xb8\xc7\x60\xf2\x06\x3f\xae\x1c\xfb\x52\x88\x4e\xa4\x41\xb2\x91\xbe\x15\x96\x62\xd6\x56\xac\x66\x5c\x69\x5f\x41\xdd\x2f\x61\x64\xeb\xfd\xc3\x21\xdc\xee\xcc\x60\x37\xb5\x00\xdc\x99\x5d\xdc\xf0\xe7\x78\xfa\x3c\xb7\x3c\x2c\xbd\xe0\x27\x61\xac\xe9\xcb\x2d\x63\x6e\xf1\xd4\x5b\xdc\x33\xa3\xdc\x37\xee\xbb\xc3\xbe\x67\xd4\x77\x06\xfd\x25\xe9\x67\x4d\x6f\xbd\x8f\xd8\xff\xc7\xc7\x66\x9e\xef\xb4\x74\x6c\x3d\x71\x73\xef\xaa\xa2\x1f\x16\x7d\x1f\xf1\xba\x8a\xad\xa7\xc6\xf9\xaa\x44\xdc\xb9\xff\xc7\xb2\xf0\xee\x22\xcf\xa3\xf3\xeb\xd1\xef\xd6\x58\x9f\x9c\x7b\x0f\x2b\xfd\x2e\x74\xbe\x37\xb1\xee\x2f\xfe\x6e\xe3\xe0\xf7\x96\x8e\x0d\xba\x4b\x56\xf4\x24\x0f\xb7\xd5\x62\x7d\x55\xa1\x4f\xbe\xeb\x75\x7a\xcb\x45\x77\x10\x63\x94\x4b\xa8\xdc\x35\xb9\x5c\xce\xdb\xfa\xe0\x85\x01\x67\xdc\x25\x70\x91\x3f\xf2\xf9\xd7\xa2\x20\x5a\x79\x3d\x00\xfd\xe4\x2f\xbf\x03\xe9\xc7\xe7\xf8\x3d\xac\x84\x3c\xee\x9d\x78\x10\x59\xe9\x3b\x82\x83\x29\xcb\xde\xa4\x3e\xc6\xf2\x50\x9f\x84\xbc\x8f\x5f\x4b\x22\xae\x9e\xe6\xa3\xce\x3f\xf1\x41\xe7\x77\x5c\xa8\x6b\x8c\xae\xfe\xe5\xf1\x36\x8f\x7f\x28\xfe\xee\xf0\xb6\x25\xed\xfa\xeb\xf1\xdf\x01\x00\x00\xff\xff\xf4\x90\xba\xfc\x7f\x1c\x00\x00")

func datastoreName_mongo_managerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_datastoreName_mongo_managerGotemplate,
		"datastore/NAME_mongo_manager.gotemplate",
	)
}

func datastoreName_mongo_managerGotemplate() (*asset, error) {
	bytes, err := datastoreName_mongo_managerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "datastore/NAME_mongo_manager.gotemplate", size: 7295, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _datastoreDatastoreGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\xcd\x8e\xe3\x36\x0c\x3e\x5b\x4f\xc1\xfa\xb0\xb0\x07\x19\x19\xe8\x31\x40\x0e\xcd\x64\x5b\xcc\x61\x16\x8b\x4e\x8b\x1e\x8a\xa2\x50\x64\xc6\x16\x46\x16\x53\x51\xce\xee\x74\x90\x77\x2f\x24\xd9\xb1\xb7\x18\x60\x6f\x09\x49\x93\xdf\x0f\xc5\xb3\xd2\x2f\xaa\x43\x68\x55\x50\x1c\xc8\xa3\x10\x66\x38\x93\x0f\x50\x89\xa2\x69\xe0\xe3\xd7\x80\xde\x29\x0b\x8f\x29\xca\xa2\x28\x8f\x26\x1c\x47\xfd\x82\x41\x92\xef\x1a\x6b\x9c\xc6\xb6\xe9\xe8\xbe\x47\x7b\x46\xcf\x8d\x26\xe7\x50\x07\x43\x8e\x9b\x81\x5c\x47\xa5\x28\x5a\x86\xef\x7e\x77\x83\x50\x8a\xc2\x52\x07\x65\x67\x42\x3f\x1e\xa5\xa6\xa1\x61\xe3\xc7\x33\xa3\x6b\x2c\x75\x7e\xe4\x52\x14\x65\x47\xe7\x97\x4e\x1a\xd7\x0c\x1d\xc9\xcb\x8f\xa5\xa8\x85\xd0\xe4\x38\xc0\x01\x4f\x6a\xb4\xe1\x29\xce\xfe\xec\xf1\x64\xbe\xc2\x0e\xca\xb7\x37\xf9\x8c\xfe\x62\x34\xca\x4f\x6a\xc0\xeb\xb5\x14\xa2\x69\xe0\x13\x7e\x49\x85\xcf\x71\x32\x28\x6b\xe9\x0b\xc3\x89\x3c\xe8\x91\x03\x0d\x90\x18\x80\x26\x77\x32\xdd\xe8\x55\xa4\x05\xca\xb5\x73\xba\x57\xdc\xa3\x67\x29\x4e\xa3\xd3\xdf\x36\xab\xce\x79\x36\x07\x6f\x5c\x57\x43\x75\xb7\xe4\x36\x80\xde\x93\xaf\xe1\x4d\x14\xe6\x04\x53\xe5\x6e\x07\x65\x19\x43\xc5\x1c\x78\x87\x8b\x28\xae\xc9\x99\x87\x2c\x33\x04\x82\x94\x4d\xa8\x3a\x65\x1c\x28\x60\x64\x8e\x40\xef\x6f\xc0\xb1\x85\x8b\x51\x80\xee\x72\x51\x11\x6e\x31\x95\x6c\xa0\x3d\x46\x39\x12\x20\xd8\xee\x32\x5f\xf9\x0b\xe6\x91\xcf\xb9\x6a\xa2\x52\x27\xb0\xb1\xf0\x87\x1d\x38\x63\x13\x54\x4b\x9d\xfc\xc3\x84\xfe\x67\x83\xb6\xe5\x2a\xfe\xcd\x3f\x63\xb2\x28\xa7\x05\x2b\xb7\x50\x2e\x06\x6f\x52\x6a\xc0\xd0\x53\x5b\x6e\x01\xca\x6f\x84\x9b\xd2\x49\xa1\x98\x8d\x13\xe5\xc7\xf8\xaf\xaa\x63\xea\x5a\x4f\xff\x96\x8e\x59\xce\xb2\x16\x45\xe1\x31\x8c\xde\x45\x78\x89\x53\x94\x2b\xe9\xf5\x3b\x23\x84\x1e\xa3\x6e\xb3\x22\x07\x15\xd4\x51\x31\x26\xbf\x9f\x75\x4f\x64\x59\x14\xed\xf1\xd1\x71\x50\x4e\x63\xd4\x63\xd2\x49\x1e\xf6\x55\x56\xaa\xce\xed\x1e\x9d\x09\x46\x59\xf3\x2f\x26\xe1\x8f\xc6\xb5\x71\x7b\x40\x93\xb5\x79\xfb\xa1\x57\xae\xb5\xe8\x19\x8c\x0b\x94\x66\x2f\x78\x39\xf8\x51\x07\x51\x0c\xca\xa9\x0e\xfd\x7a\xe2\x87\x64\xc1\x53\x4e\x44\x11\x0f\xfb\x2d\x2c\xa0\x36\x37\x46\x11\xc2\xc2\x61\x19\xcc\x1b\x30\xae\x35\x1a\x19\x50\x06\xa9\xe5\x6d\x0c\xc7\xfe\x7f\xfe\xd5\xb2\xbc\xa9\x90\x26\xfc\x0f\x45\x1a\x51\x44\x51\xfe\xde\xc0\x94\x8b\x5f\x7a\xe5\x3a\x84\x5b\xaf\xd5\x97\x4b\xbf\xaa\xbe\xe1\xfb\x35\x3b\x11\x89\xaf\xd6\x70\xb9\x34\xb3\x55\x1f\x16\xeb\xdf\xa3\x2b\x8a\xd8\x2c\xdb\xb3\xd0\xfd\xe9\xf3\xa3\x28\x8a\x49\xa5\x2d\xbc\xc3\x60\x13\x77\x40\x5c\xd3\x2b\x5f\x3d\x71\x4d\xc3\x99\x18\x39\xb9\x95\x80\xac\x0c\x22\xb7\x36\x29\x10\xf8\xd1\xa6\xb5\x19\x62\xb9\x08\xaf\x67\x5c\xf7\xca\x2e\x46\x21\x9a\x06\x0e\x7b\x30\x9c\xba\x3c\xcd\x37\x63\xba\x83\x10\x7a\x15\xa0\x27\xdb\xe6\x7c\x22\x30\xbf\xd1\x94\xd3\xca\xc1\x31\x62\x3b\x1b\x6c\xf3\x7d\xb1\xc4\xd8\x4a\x51\x1c\xf6\x70\x17\x4f\xdc\xcc\x3c\x6b\xbb\x9f\xf7\xcd\x23\xd3\xe8\xf5\xca\x96\x1e\x7d\xde\x68\xa5\x35\x32\x47\x16\x17\xe5\x0d\x8d\x0c\xf1\x48\xa5\x0d\x91\x62\x96\x0e\xee\xd6\xeb\x96\x9b\x3f\x28\xdd\x23\x24\x8a\x9c\x02\xf7\x70\xa7\x63\x4c\x3e\xe1\x40\xfe\x75\x2e\xbe\xce\x17\x74\x3a\x13\x90\x0d\x65\x50\xd3\xd9\x9c\x1f\x4f\x2a\xa3\x80\x5b\xf8\xad\x5f\x98\x7b\xfc\x67\x34\x51\xfe\xc8\xd5\xb8\x2e\x52\x18\x95\xb5\xaf\xc0\x04\x8e\x60\x48\xc3\xc0\xa2\x7a\x61\x20\xad\x47\x3f\x9d\xd9\x6a\x80\xd5\x2d\xad\x57\x08\xaa\x1a\xaa\xb9\x7d\x52\x6d\x8a\xa7\x43\x3b\xad\xdb\x20\x0f\xfb\x39\x2e\x1f\xe8\xfc\x5a\xd5\xe2\x2a\xfe\x0b\x00\x00\xff\xff\x65\x62\x8f\x4d\x09\x07\x00\x00")

func datastoreDatastoreGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_datastoreDatastoreGotemplate,
		"datastore/datastore.gotemplate",
	)
}

func datastoreDatastoreGotemplate() (*asset, error) {
	bytes, err := datastoreDatastoreGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "datastore/datastore.gotemplate", size: 1801, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _datastoreMongoGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcb\x31\xaa\xc2\x40\x10\x87\xf1\x3a\x73\x8a\x3f\x21\xc5\x7b\x85\x39\x80\x90\x4a\x4b\xb1\x31\x17\x18\x36\x43\x58\x8c\x3b\x61\x77\x40\x64\x98\xbb\x4b\x3a\xeb\xef\xfb\xed\x9c\x9e\xbc\x0a\x16\x36\x6e\xa6\x55\x88\x92\x96\x66\xf8\xa3\xce\xbd\x72\x59\x05\x43\xc6\x79\xc2\x78\x65\xe3\xc7\xb1\xcc\x9f\x5d\x5a\x04\x75\x00\x70\xd1\x6d\x93\x64\x59\x8b\x3b\x86\x3c\xde\xf9\x25\x88\xc0\x84\xde\x1d\xb3\xde\xf4\x2d\xf5\x27\xf4\x74\x28\xf7\x13\xa4\x2c\x11\xf4\xff\x0d\x00\x00\xff\xff\x69\x06\xfd\xeb\x82\x00\x00\x00")

func datastoreMongoGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_datastoreMongoGotemplate,
		"datastore/mongo.gotemplate",
	)
}

func datastoreMongoGotemplate() (*asset, error) {
	bytes, err := datastoreMongoGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "datastore/mongo.gotemplate", size: 130, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHandlersGotemplate,
		"handlers/handlers.gotemplate",
	)
}

func handlersHandlersGotemplate() (*asset, error) {
	bytes, err := handlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/handlers.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersHooksGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHooksGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHooksGotemplate,
		"handlers/hooks.gotemplate",
	)
}

func handlersHooksGotemplate() (*asset, error) {
	bytes, err := handlersHooksGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/hooks.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersMiddlewaresGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x41\x0e\x02\x21\x0c\x05\xd0\xbd\xa7\xe8\x9a\x44\x7b\x18\x4f\x40\xec\xb7\x12\x81\x4e\xda\x4e\x66\x41\xb8\xfb\xbc\xb5\xb8\xd0\x1b\x20\xb5\x67\xfa\x19\xc1\x8a\xa9\xf6\x6f\xc9\xbf\x3a\xa5\xc3\x83\x13\xe3\xe8\x35\x11\x3c\x9a\x48\xc7\x55\x1d\xf1\x52\xa3\xaf\x39\x7d\x4c\x40\x85\xf7\x7e\xdc\x01\x00\x00\xff\xff\xcf\x9e\xe9\x81\x4b\x00\x00\x00")

func handlersMiddlewaresGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersMiddlewaresGotemplate,
		"handlers/middlewares.gotemplate",
	)
}

func handlersMiddlewaresGotemplate() (*asset, error) {
	bytes, err := handlersMiddlewaresGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/middlewares.gotemplate", size: 75, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientCliHandlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xc1\x6e\xdb\x30\x0c\x86\xcf\xd6\x53\x10\x85\x51\xc4\x43\x2b\xdf\x03\xec\xd0\x36\x5d\x91\xc3\xda\x22\x0b\x76\x57\x62\xc6\x16\x66\x53\x9e\x44\x37\x2b\x04\xbd\xfb\x20\x45\x4d\xd2\x5d\xb2\x8b\x4d\xf1\xff\xf4\x8b\x22\x55\xd7\xf0\x60\x1a\x84\x16\x09\xad\x62\x6c\x60\xf3\x0e\x6c\x27\xe7\x24\x2c\x5e\xe0\xf9\x65\x0d\x8f\x8b\xe5\x5a\x8a\xba\x86\x15\xda\x89\x48\x53\x7b\x00\x60\xaf\xfb\x1e\xcc\x1b\xda\xbd\xd5\x8c\xc0\x9d\x76\xb0\xd3\x3d\x26\xf8\x27\x5a\xa7\x0d\xcd\xc1\x7b\x99\xe3\x10\xce\x04\x58\x28\xc6\x73\x35\xae\x43\x10\x62\x54\xdb\x5f\xaa\x45\xe8\x14\x35\x3d\x5a\x27\x84\x1e\x46\x63\x19\x66\xa2\x18\x37\x70\xe5\x7d\x29\x5f\xef\x97\x29\xf7\xaa\xb8\x83\xdb\x10\xae\x44\x25\x84\xf7\xb0\xd7\xdc\x41\xc9\x08\xf3\xaf\x20\x43\x10\x85\xf7\x56\x51\x8b\x50\xea\x98\x2a\x19\xe5\x0f\xb4\x6f\x7a\x8b\xf2\x3b\x72\x67\x1a\x17\xa1\xba\x06\xef\x4b\x2d\x9f\xd5\x80\x21\x80\x1e\xc6\x1e\x07\x24\x76\xf0\x01\x8b\x62\x37\xd1\xf6\x9c\x9a\x79\x9f\x0e\xd3\xd4\xe0\x9f\x64\xfc\xd0\x6b\x24\xbe\xb3\xad\x4b\xde\x31\x80\x23\xee\xfd\x93\x89\x11\xc8\x6f\x13\x6d\x59\x1b\x8a\x7a\xcc\x23\x35\x21\x54\x30\xfb\x32\x6e\xe4\x91\x2a\xb5\x5c\xe1\xef\x09\x1d\xaf\xdf\x47\xcc\x1e\x37\x80\xd6\x1a\x5b\x79\x51\x14\xf6\xa0\xc6\x4b\x5d\xdc\x17\x79\xef\x6f\x73\x73\x06\xe4\x2e\x6e\xfb\xaf\xc2\x63\x6f\x45\x51\x9c\xda\x38\x2a\xab\x86\xd4\xca\xe8\x23\x13\x9b\x99\x74\x86\xde\x81\xa2\x06\x66\xe9\x43\x86\xf3\x0e\xb9\x74\xf7\xca\x61\x2c\xaa\xfa\x94\x5f\xe1\x88\xf1\xd5\x55\x9f\xd3\x8f\x34\x0d\x55\xb6\x2d\x4e\xb7\x3b\x88\x79\x4c\x73\xb8\xfe\x57\x79\x32\x77\xb6\x0d\xe1\xe6\x58\x0e\xf6\x0e\xe1\xa2\xcf\x65\x1b\x6a\x4e\x9d\x38\x2d\xb2\x94\xe2\x90\x86\xc2\x93\x25\xb8\xce\xc3\xb9\x01\xd2\xbd\x28\xd2\x2b\x3c\x60\x1f\xff\xbf\x01\x00\x00\xff\xff\x17\x17\xce\xeb\x75\x03\x00\x00")

func svcClientCliHandlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientCliHandlersHandlersGotemplate,
		"svc/client/cli/handlers/handlers.gotemplate",
	)
}

func svcClientCliHandlersHandlersGotemplate() (*asset, error) {
	bytes, err := svcClientCliHandlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/cli/handlers/handlers.gotemplate", size: 885, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientGrpcClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4d\x6f\xdb\x38\x10\x3d\x8b\xbf\x62\xd6\x08\x16\x52\xa0\xd0\xf7\x2c\x7c\xa9\xd3\x2d\xba\xd8\xa6\x46\x1a\x74\x0f\x45\x51\x30\xd4\x58\x26\x2c\x93\x2a\x49\x3b\x31\x04\xfd\xf7\xc5\x90\x94\x23\x27\x8e\xdb\x43\x10\x8b\xf3\x38\x1f\xef\x0d\x39\x9c\x4e\x61\x6e\x2a\x84\x1a\x35\x5a\xe1\xb1\x82\x87\x3d\x78\xbb\x75\x8e\xc3\xcd\x67\xb8\xfd\x7c\x0f\xef\x6f\x3e\xde\x73\x36\x9d\xc2\x1d\xda\xad\xd6\x4a\xd7\x11\x00\x8f\xaa\x69\xc0\xec\xd0\x3e\x5a\xe5\x11\xfc\x4a\x39\x58\xaa\x06\x03\xf8\x2b\x5a\xa7\x8c\xbe\x86\xae\xe3\xe9\x77\xdf\x8f\x0c\x70\x23\x3c\x8e\xad\xf4\xdd\xf7\x8c\x20\x0b\x21\xd7\xa2\x46\xa8\x6d\x2b\xa1\xb5\x66\xa7\x2a\x74\x20\xa0\xbe\x5b\xcc\x41\x36\x0a\xb5\x87\xa5\xb1\xe0\x57\x48\x0e\xbe\xa0\xdd\x29\x89\xfc\x56\x6c\xb0\xef\xc1\xa5\x4f\xd6\x8e\xdc\x30\xa6\x36\xad\xb1\x1e\x72\x96\x4d\xa4\xd1\x1e\x9f\xfc\x84\x65\x93\xda\x98\xba\x41\x5e\x9b\x46\xe8\x9a\x1b\x5b\x4f\x09\xfd\xb6\x65\xba\x41\x2f\x2a\xe1\x45\x80\x28\xbf\xda\x3e\x70\x69\x36\xd3\x76\x5d\x4f\xd1\x5a\x63\xdd\x84\x1d\x5b\x6a\x73\xb5\x56\x7e\x4a\x7f\xa8\xab\xd6\x28\x4d\x81\xc9\x97\xb7\x42\xbb\x90\xd4\x1b\xf8\x03\x20\x25\xc5\xb2\xe9\x14\xee\x89\xe6\x54\x32\xcb\x26\x5d\xc7\x3f\x86\xca\x16\xc2\xaf\xe0\xaa\xef\x61\xea\x76\x54\x40\xfb\x00\x64\x5c\xbc\x3b\x36\x4f\x58\x11\x38\xbe\xc5\x47\xb0\xe8\xb7\x56\x3b\x10\x7a\x20\x0d\x1e\x84\x5c\xc7\x26\x38\xa6\x5b\x1a\xad\x51\x7a\x65\x34\x87\x8f\x1e\x94\x23\xf2\xc9\x8f\x45\xd7\x1a\xed\xd4\x83\x6a\x94\xdf\x83\x59\x06\x55\xa4\x68\x1a\xb4\xe0\x0d\x54\x4a\x34\x25\x08\x5d\x41\x23\x3c\x5a\x90\x8d\x71\x58\x46\xd0\xb3\x4f\xb6\xdc\x6a\x49\x39\xe5\xb4\x08\x97\x54\x2f\x9f\x87\xd0\x73\xa3\x75\x09\xa6\x25\x9c\x03\xce\xd3\xf2\xe7\xb0\x50\x40\xde\x3e\xf0\x57\x3d\x40\x5f\x68\x4b\x08\x8a\x14\xd0\xb1\x6c\x27\x2c\x48\x99\xaa\x99\x1b\xbd\x54\x35\x63\x19\x35\xd1\x8f\x12\x96\x70\x3d\x03\x2b\x74\x8d\x87\x38\x1d\xcb\x32\xb4\x96\x0c\xcb\xfc\x4f\x29\x0b\x96\x65\x6a\x49\x0e\xe1\x8f\x19\x68\xd5\x04\x44\x16\x19\xa4\xef\x14\xcc\xf1\xff\xac\x68\x73\xb4\xb6\x84\x89\x14\x5a\x1b\x0f\xa2\x6d\x9b\x7d\xf2\x3c\x21\x47\x3d\xcb\x7a\xc6\x32\x39\x2a\xc4\x51\xa4\x6f\xdf\x8f\xda\xe2\xa8\x52\x0a\x77\xca\xfa\x0e\x97\xc6\x62\x4e\xc9\xa4\xb6\xfe\x2a\x9a\x2d\xba\x7b\xf3\xe1\x6e\x31\xff\x94\xba\x35\x97\x92\xaf\x50\x54\x68\x5d\x51\x94\x14\x3e\xeb\xba\x2b\x78\x54\x7e\x05\x17\x1e\x29\x38\xef\x7b\x96\x8d\x56\xdb\x75\x4d\x64\x92\xe9\xc2\x23\x4f\x67\x32\xf2\x4b\xd1\x08\x19\x39\xbb\x50\x03\x68\x50\xe1\x13\xfa\x95\xa9\x5c\x04\x06\xee\xbb\xee\xde\xfc\x6b\x1e\xd1\xc2\x85\x4a\x22\xbd\x4f\xa7\x01\x86\x63\xc1\x87\x95\xb0\x2b\xf0\x4b\x61\xde\xde\x38\x83\x63\x46\x6e\xf1\x31\x92\x92\xc7\xbd\xc4\x88\x2e\xd3\xef\x49\xd7\x0d\x35\xf5\x3d\xef\xba\x71\xbe\x71\x71\x32\x86\xaa\x97\x8b\xef\xb5\x34\x15\x12\xa9\x23\xeb\x1d\xfe\xdc\xa2\xf3\x03\xe6\x06\x4f\x62\xc2\x09\xc1\x01\x14\x1a\xf6\x83\x09\xe4\x5e\x28\x3e\x98\xef\xf7\xed\x90\x48\xd7\x0f\xd8\xa3\x16\xe1\x9c\xa7\xf5\xe2\x40\x55\x5e\x84\x95\xa4\x08\xea\x2a\xa9\x98\x7e\x0d\x3f\xd8\xd0\xa9\x6e\x27\x0f\x7b\x5d\x47\x80\xb1\x86\x2f\x05\xa4\x0b\x23\xb8\x7b\xc5\xfd\x35\x00\x9c\x13\xb5\x7c\x8e\x9d\xf5\x25\x1d\x10\x16\xef\x76\x22\x07\xa2\x4a\x10\xe9\x62\xe7\x73\x88\x53\xe3\x2c\xb3\x74\x1d\x09\x38\xbe\x2d\x79\xdc\x31\x40\xfe\xa6\xfb\xc5\xaf\x44\xb8\xc9\x76\x68\xbd\x03\x41\x7e\xc3\x1d\x77\xa2\x0e\xb0\x48\x87\xd6\x1b\x10\xb0\x75\x68\xaf\x2a\xb3\x11\x4a\xbf\x01\x8d\x31\x38\x2c\xac\xda\x08\xab\x9a\x3d\xed\x59\x6e\x1b\x50\x1a\x44\xba\x74\xd2\x1d\x77\xb6\x90\xfc\x07\xa4\x43\xcc\xe7\xf1\x7f\x19\x5a\xfc\x2e\x24\xa3\xb4\x47\xbb\x14\x12\xbb\xbe\x80\x7c\xf4\x35\xbe\xe8\x62\xde\xd7\xb3\xe7\x7d\x3c\xbf\xfc\x75\xcb\x15\x87\x0e\x09\x0e\x06\xc5\x0e\xfd\xf3\x42\xb9\x78\x18\x7e\x4b\xb9\x73\xe7\xe6\xa4\x70\x71\x43\x42\xbc\xa5\xdb\xaf\x35\x89\x01\x82\x80\x67\x44\x0e\xa8\xdf\x12\xee\x5c\x1d\xa7\x74\x1b\x32\xf8\x4d\xd5\x7e\x86\x19\x94\xf2\x39\xa1\x58\x30\xbc\x21\xd8\xcf\x57\x72\x31\xbf\x6f\xf1\x68\xda\x81\xf3\x76\x2b\x3d\x05\x4b\x83\x00\xbe\x7d\x77\xde\x2a\x5d\xa7\x93\x39\x9e\x36\x51\x18\xaa\x3b\x7c\x05\x01\x36\xa6\x52\x4b\x85\x2e\xce\xee\xc3\xb3\x80\x26\x69\x88\x76\xb4\x9f\xb6\xe6\x97\xe3\x04\x8a\x58\x2e\x8b\x6c\xce\xfd\xd3\x30\xa7\xbe\xa0\xae\xf2\x35\xee\xc3\x70\x8f\x19\x15\xc7\xce\xba\x43\xad\xc1\xad\x81\x53\x8e\xc3\x40\x36\xc3\x94\x83\x19\x90\x4b\x36\x1e\xd1\x34\xf6\xfa\x14\xff\xdc\xac\x0c\xb9\x0c\xe4\x14\x70\x6a\xea\x8e\xbb\xf3\x45\x76\xd2\x3f\xbd\x6e\x86\x4d\x05\x97\xc3\xcb\x91\x7f\xba\x29\x5e\x22\x42\xf2\x34\x27\x5b\xa1\xc6\xca\x64\xc3\x13\x65\xfd\xfc\x44\x09\xe9\x85\xe9\xa8\x96\xb0\x2b\xc1\x04\x9b\xf4\x4f\x3c\x54\x93\xaf\x0b\x9e\xa7\xdc\xff\x22\x63\x1c\xa4\xd1\xf1\x8c\x1e\x23\xc4\x77\xf8\x2c\x61\x5d\xc2\x2e\x4c\x90\x3e\x3c\x4b\xe2\x23\x27\x42\xc7\xcf\x9c\xcb\x4d\x05\x33\x38\x14\xf0\x8f\x51\x3a\xbf\xdc\x54\xe5\xf3\xd2\x82\xf6\x44\xaf\x9c\xf3\xa2\x18\xdc\x25\x66\xa4\x7f\x8a\xec\xff\x1f\x00\x00\xff\xff\x00\xce\x0e\xa6\x70\x0c\x00\x00")

func svcClientGrpcClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientGrpcClientGotemplate,
		"svc/client/grpc/client.gotemplate",
	)
}

func svcClientGrpcClientGotemplate() (*asset, error) {
	bytes, err := svcClientGrpcClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/grpc/client.gotemplate", size: 3184, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientHttpClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x10\x34\x29\x91\xc8\x02\x56\xf8\x98\x88\xc3\x67\x9d\x3f\x95\xe5\xdd\x69\x18\xe0\x8d\xa1\xab\xdc\x01\x29\x7e\x61\x7c\x7b\xd7\x82\x5a\xfc\x7d\x52\x5f\x64\x63\xe4\xda\x9b\x07\x95\xf8\x34\xcb\x44\x2a\x2e\x4f\x0f\x39\xfc\x01\x59\x75\xce\x65\x8c\x23\x9b\x49\xda\xf6\xfd\xb6\xc1\x1a\x22\x5d\xed\x44\xe5\xfe\x27\x92\xe6\x5c\x7e\x01\x00\x00\xff\xff\x0b\x3c\x4c\x9e\x69\x00\x00\x00")

func svcClientHttpClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientHttpClientGotemplate,
		"svc/client/http/client.gotemplate",
	)
}

func svcClientHttpClientGotemplate() (*asset, error) {
	bytes, err := svcClientHttpClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/http/client.gotemplate", size: 105, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x4d\x6f\xdc\x38\x12\x3d\x4b\xbf\xa2\x22\x78\xe1\xee\x40\xa6\xef\x0e\x7c\xd8\x4d\xbc\xbb\x06\x36\x1f\x88\xbd\xbb\x87\x20\x08\xd8\x52\xa9\x45\x98\x22\x19\x92\xea\x76\x8f\xa0\xff\x3e\x28\x52\x52\xab\xd3\x4a\x26\x33\xc7\xc1\x1c\x0c\xdb\xfc\x78\x7c\xf5\xaa\xea\x91\xba\xbe\x86\xd7\xba\x44\xd8\xa2\x42\xcb\x3d\x96\xb0\x39\x80\xb7\xad\x73\x0c\xde\xbc\x87\x77\xef\x1f\xe1\xee\xcd\xfd\x23\x4b\xaf\xaf\xe1\x23\xda\x56\x29\xa1\xb6\x71\x01\xec\x85\x94\xa0\x77\x68\xf7\x56\x78\x04\x5f\x0b\x07\x95\x90\x18\x16\xff\x0f\xad\x13\x5a\xdd\x40\xd7\xb1\xe1\xef\xbe\x9f\x4d\xc0\x1b\xee\x71\x3e\x4b\xff\xf7\x7d\x9a\x1a\x5e\x3c\xf1\x2d\x82\xdb\x15\x29\xad\x7f\x1c\x61\xa1\xd0\xca\x73\xa1\x1c\x34\xe8\x6b\x5d\x3a\xf0\x1a\x1a\xfe\x84\x20\x54\x29\x76\xa2\x6c\xb9\x04\x54\xa5\xd1\x42\x79\x07\x95\xd5\x0d\x38\xb4\x3b\x51\xa0\xcb\x09\xc9\xe2\xd7\x16\x9d\x07\xae\x4a\xb0\xe8\x8c\x56\x0e\xc1\x1f\x0c\x06\x24\x5a\x4a\x41\x68\x87\x47\x94\x1c\xb8\x83\x3d\x4a\x49\xbf\x51\x15\xba\x44\xeb\x08\x80\xf0\x4a\x1c\xfe\xaf\xb4\x1d\x36\x06\xb4\x3c\x0c\x70\x12\xa7\x02\xdd\x5a\x70\xad\x31\xda\x92\xb8\xde\x72\xe5\xe8\x6f\x3a\x4e\x70\x29\x7e\xe1\x5e\x68\x45\x68\x95\xb6\x0d\xf7\x8e\xa5\xa9\x68\xc2\x8a\x55\x9a\x64\x55\xe3\xb3\x34\xc9\x28\x72\x7c\xf6\x59\x9a\x26\xd9\x56\xf8\xba\xdd\xb0\x42\x37\xd7\x5b\x7d\xf5\x24\xfc\x35\xfd\x8c\x8c\x69\x89\xd9\x40\xd6\x75\xec\xc3\x3f\xee\x03\xd0\x07\xee\x6b\xb8\xea\xfb\x2c\x5d\x07\x41\xef\x26\x89\x0a\x2d\x25\x16\xde\x8d\x5c\x7d\x3d\x0b\x1d\x7c\xcd\x3d\x14\xba\x31\x14\x18\x57\xc0\xcb\x72\xd4\x93\xc1\xbd\xbf\x74\x04\xd6\x20\x57\x9e\xe4\xdb\x20\xb4\x0e\x4b\xd2\x89\x43\x8d\xd2\xa0\x05\xe7\x6d\x5b\xf8\x9c\xa6\x87\xa3\x96\x4f\x12\xca\x6b\xe0\x04\xe7\x84\xda\x4a\x04\xc3\x2d\x6f\xd0\xa3\xa5\x52\xa2\xf1\x7b\x05\x3c\x66\xc8\xe6\x20\xfc\xa5\xa3\xc3\xaa\x56\x06\xa5\xab\x56\x15\xa4\xe2\x40\x59\x21\x09\xad\x41\x9b\x50\xd1\xa0\x69\xaf\x41\x7b\x35\x1e\x48\x80\x1b\xee\x84\x63\xf0\x4f\x6d\x01\x9f\x79\x63\x24\xe6\x70\xd0\x2d\x34\x62\x5b\x7b\x30\xdc\x51\x96\x67\x52\x11\xc1\xe9\xa0\x78\x8e\xb1\xba\x6c\x0b\x0c\x32\x70\x05\xb5\xf7\x86\xfd\x9b\xab\x52\x12\xc7\xbd\xf0\x35\x20\x2f\xea\xa1\x58\x61\x35\x9e\xbe\x86\xbd\xb0\x58\x42\x6b\x22\xa8\x33\x58\x88\x4a\x14\x60\xb8\xaf\x19\xac\xee\x03\x3f\xe1\x08\x7f\xc3\x37\xf2\x00\x1c\x1a\xe1\x7c\x2c\x74\x28\xd1\x89\xad\xa2\xad\x42\xed\xf4\x13\x06\x29\x1f\x62\x5a\xa6\xc6\x08\x14\xf1\x34\xd9\x31\x19\x04\x31\x2a\xc9\xd6\x73\x75\x0b\x29\x50\xf9\x53\x75\x67\x89\x3b\xf6\x98\x3c\x50\x27\x46\x38\x2c\x7f\x94\x46\xea\x86\xa8\x95\x20\x85\x1b\x8c\x65\x75\xe4\x2b\x94\x47\x5b\x71\x2a\xa8\xe5\x4c\x10\xd8\x74\xd8\x72\x9f\xb7\x2e\x3a\xd2\xd0\x58\xd7\x21\x0f\xef\x70\xff\x7a\x88\xa7\xd0\xcd\x46\xa8\xa0\x53\x33\x50\x9c\x25\x36\x1f\xdc\xc0\xb7\x56\x81\x08\x95\x4c\x04\x0b\x2e\x25\xda\x58\xcc\x03\x59\x96\x86\x70\xce\x04\xed\xd2\xae\xb3\x5c\x6d\x11\x2e\x04\xdc\xdc\x02\x1b\xd7\xbf\x8d\xc9\xe8\xfb\x34\xe9\xba\x0b\xc1\xde\xf1\x06\xfb\x7e\xdc\x0f\x00\x53\x10\x6c\x1c\x4c\xbb\xee\x8a\x46\xfb\x3e\xed\x4f\x7b\xf5\x27\x0e\xa1\xea\x84\xd5\x8c\xe1\x1a\x66\xe7\xae\x0a\xff\x0c\x83\x8f\xb0\xd7\xf1\x77\x4e\xd5\xf0\xd2\x6c\x58\xd7\xfd\x4b\xd3\x32\xb8\x10\xec\x63\x74\xc9\xc7\x83\xc1\x61\xeb\x1a\x56\xe7\x8b\xa2\x7d\xce\x56\xe5\x80\xd6\x6a\xbb\x86\x2e\x4d\x92\xd1\x5e\xc3\x20\x11\x46\xb6\xa0\x01\x71\x22\x0e\xeb\x34\x49\x44\x15\x96\xbe\xb8\x05\x25\x64\xc0\x48\x86\xac\x28\x21\x03\x4c\x9a\x24\x7d\x3a\x8d\x8e\x27\xb0\x9f\xe1\xb6\xce\x09\x25\x4d\xfa\xb4\xeb\xa2\xbc\x24\xee\x5b\x6a\xa9\xb9\xc2\xa1\x69\x2f\x3c\x06\x85\x63\xde\xe6\xa2\x5f\x78\x5c\xd2\x3d\x0a\x4f\x60\x4b\x21\x3a\x08\xf4\xe6\x7b\xe3\x8a\x87\xd0\x83\xeb\xf3\x22\x38\x09\x9e\xb0\x97\x53\x37\xde\x66\x53\x0f\x75\x94\xa8\xe9\x5e\x9b\x0d\xc7\x24\xcc\xb2\x43\xe8\x5f\x29\xa2\x01\x63\x49\xc3\xb3\x22\x08\xfb\x76\x53\x42\x1d\xfb\xa6\xb8\x02\xa3\xb8\x6a\x21\x97\x4b\xd9\x8c\xf9\x9c\x66\x76\x43\x92\xe2\x70\x50\x3f\xe6\x6a\x9e\xb3\xff\x5b\x6e\xfe\x2e\xe5\xdd\x73\x81\xc6\xc3\xde\x72\xe3\xa2\xcd\x4e\xea\x55\x02\x65\x49\x77\xcc\xd0\x9f\xc7\x86\x0d\xe9\x0d\xfe\xb4\x70\x71\xb2\xb7\xa2\x2c\x25\xee\xb9\x8d\xef\x97\xff\xba\xf1\x45\x43\x77\xb9\x31\xf2\x40\x36\x43\xd6\xe9\x09\xbc\x99\x56\x87\xbb\x01\x77\x68\x0f\x53\x2a\xa9\xad\xc8\x45\xc6\xdb\x92\xf0\xde\x1b\xba\x39\xc8\x3d\xf3\x99\x79\x15\x5c\xd1\xcd\x49\xf7\x0d\x96\xb4\x6d\x73\x00\x45\x39\x88\x37\x2a\x3e\x17\xb2\x2d\xb1\x8c\x8f\x99\x0d\x12\x05\x8a\xd9\x60\xc9\xce\xd4\x58\x1d\x39\xe5\x90\x3d\x78\xee\x5b\x97\xe5\x90\x7d\x10\x6a\x9b\xad\xd3\xd1\x1e\x5e\xce\xfc\xe1\x7b\xfb\x61\x41\x95\xfc\xc8\x86\x31\xe6\xbc\x15\x6a\x1b\xca\x49\xa8\x61\xf8\xe6\x16\x1a\x6e\x3e\xc5\xa9\xcf\x51\xfe\xae\xa7\xf4\x93\xad\xfd\x96\x7d\x25\x49\x36\xab\xa8\xec\x06\x26\x80\x3e\x1f\x20\x62\x19\x24\x7d\x9a\x26\x94\x95\x2f\x44\x29\x94\x71\x80\x9e\xe8\x75\xd1\x4e\xbe\xe4\xa0\x9f\x68\x7a\x24\xf8\x09\x9f\x3f\xbf\x82\x17\xfa\x29\x96\xa4\xe1\x4a\x14\xab\xaa\xf1\xec\xc1\x58\xa1\x7c\xb5\xca\xee\x46\x88\x29\x93\x97\x7f\x73\x97\x50\x6a\x74\xa0\xb4\x07\x7c\x16\xce\xbf\x02\x87\x38\x2f\x80\xa9\x86\x1c\xdb\xea\x8c\x48\xad\xd7\x83\x59\x95\x28\xd1\xe3\x6a\x64\x10\xe6\x8e\x01\x08\x55\xe4\xf0\xe5\x18\xc1\xa4\xe4\xcf\x6b\x26\x2a\xda\x05\xb7\xb7\x70\xa2\xde\xd0\x74\x8b\xae\x0b\xb7\x33\xf2\xab\xc5\x25\xeb\xb1\x0b\x4f\x54\x8f\x1d\xf8\x1f\xbe\x41\x89\xe5\xb1\x30\xe2\x77\xc0\x16\xfd\x58\xc6\xf3\xc7\x5d\xac\xe6\x7d\x8d\x6a\x9a\xd5\xb3\xca\x1d\xc0\x62\x01\xe6\xb1\xe1\x86\x9e\x68\xe3\x62\x88\x1f\x17\x3c\x7e\xa1\x88\x82\xde\x38\x56\x14\xf1\xf1\x39\xe3\x50\x8b\xa2\x0e\x5b\x1d\xaa\x25\x0a\xc3\xc5\x3e\xec\x1e\x9f\x35\xda\x0e\xd7\xfa\x79\x54\xc1\x79\x63\x2d\xe7\xe7\x26\xbd\xe0\xdb\xe9\xf7\xe2\xfa\xc3\x36\x75\x46\x2a\x1f\xe2\x0c\x8a\x5b\x2c\x50\xec\xe2\x03\x30\x84\xf8\xcd\xbb\x9a\xc1\x03\xe2\x04\x33\x43\x09\x13\xe3\xbb\x74\xb2\x00\x22\x4a\x45\x59\xa2\xe7\x42\x86\x37\xe4\xd8\x51\xe1\xf3\x64\x78\xfb\x72\x29\xfc\x81\xfd\xc8\x4d\x4e\x62\x9f\x9b\xca\xef\x56\xf4\x2f\xcb\xf9\x53\x5a\xce\xc9\xb6\x7c\xf9\x69\xf8\x3d\x07\xfa\x35\x00\x00\xff\xff\x9a\x16\xde\x59\xb0\x10\x00\x00")

func svcEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcEndpointsGotemplate,
		"svc/endpoints.gotemplate",
	)
}

func svcEndpointsGotemplate() (*asset, error) {
	bytes, err := svcEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/endpoints.gotemplate", size: 4272, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcServerCliCliGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xcd\x6e\xdb\x3a\x10\x85\xd7\xe2\x53\xcc\x25\x70\x0b\x09\x70\xa9\x2c\x9a\x2e\x5c\x78\x91\x46\x6e\x9a\x4d\x2c\x38\x8e\xb7\x05\x2d\x8d\xe4\x41\x65\x52\x20\x69\x05\xa9\xa1\x77\x2f\x48\x59\x85\x5a\xa7\x48\x57\x1a\x62\xce\x7c\xf3\x73\x94\xa6\x70\xab\x4b\x84\x1a\x15\x1a\xe9\xb0\x84\xdd\x0b\x38\x73\xb4\x56\x40\xb6\x82\x87\xd5\x06\x96\xd9\xfd\x46\xb0\x34\x85\x35\x9a\xa3\x52\xa4\xea\x41\x00\xcf\xd4\x34\xa0\x3b\x34\xcf\x86\x1c\x82\xdb\x93\x85\x8a\x1a\x0c\xe2\x2d\x1a\x4b\x5a\xcd\xe1\x74\x12\xe7\xb8\xef\x27\x09\xc8\xa4\xc3\x69\xd6\xbf\xfb\x9e\xb1\x56\x16\xdf\x65\x8d\x50\x34\xc4\x18\x1d\x5a\x6d\x1c\xc4\x2c\xe2\xd5\xc1\x71\xff\x69\x64\xed\xbf\xda\x72\xc6\x22\x7e\x3a\x89\xfb\xa0\xc9\xa5\xdb\xc3\xfb\xbe\x87\xd4\x76\x45\x6a\xd1\x74\x68\x38\x4b\x18\x0b\x1b\xaa\x8a\xea\x61\xde\x1d\x42\xab\xdb\x63\x33\xee\xba\x7c\xd8\x42\x27\x8d\x05\xad\x80\x14\x39\x6a\xe8\x87\x74\xa4\x95\x2f\xf4\xcd\x2e\xf6\xfc\x55\x41\x6a\x24\x6b\x15\xa4\x22\x97\xc6\x62\x9c\xb0\x4e\x9a\x31\x35\x4c\x22\x86\x17\x63\xd5\x51\x15\xa1\x4f\x9c\xc0\x89\x45\xa1\xea\xd1\x19\x52\xf5\x56\x9a\xf8\xdd\x20\x13\x19\xee\x8e\xf5\x4d\x59\x9a\x19\xf0\xd2\xc7\x42\x96\xa5\xe1\x33\xe0\xf3\xeb\xab\x8f\x57\x3e\x08\x12\x90\xaa\x84\x03\x3a\x43\x85\x85\x86\xac\x43\x05\x5e\x89\xd6\xf2\xe4\xaf\xf4\xaf\x9b\x4d\x7e\x86\xef\x9d\x6b\xa7\xec\xeb\xc0\xf6\x82\x7f\xc7\xdd\xad\xf3\xdb\x33\xae\x36\x6d\x31\xc5\x7d\x08\xb8\x7a\x9d\xdf\x42\xec\xa1\xc9\x25\x95\x45\x69\x0a\x4f\x16\x01\x55\x47\x46\xab\x03\x2a\xe7\xcf\x4b\x72\xd7\xa0\x9d\x01\x55\x60\xd1\x09\xf8\x12\xac\xd8\xcb\x0e\xa1\x35\xa4\x0d\xb9\x97\xe0\x09\x2c\x55\x17\xec\x10\x2c\xa2\x2a\x80\x61\xbe\x00\x6d\xc5\x1d\x3a\x54\x5d\xcc\xb3\xe5\xe7\xa7\xbb\x6f\x37\x59\xb6\xe6\xc9\xa7\x41\xf0\xdf\x02\x38\xf7\xf7\x8f\xfe\x3c\x38\x2c\x82\x82\x45\x7d\xc0\x85\xbf\xef\x77\x5c\xbe\x5a\x6f\x3c\x28\xa4\x2e\x40\xe3\x6d\x61\x01\xd5\xc1\x89\xc7\xd6\x90\x72\x55\xcc\xe7\xff\x5b\x3e\x0b\x35\xc9\xc8\x7e\x65\x54\x5f\xfd\xc6\xa4\x93\x06\xd3\x41\x5f\x81\x79\x5f\xde\x80\x8d\xd6\x4d\x60\x3d\xfb\x19\x00\x00\xff\xff\xe0\x4d\x14\x8b\x13\x04\x00\x00")

func svcServerCliCliGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcServerCliCliGotemplate,
		"svc/server/cli/cli.gotemplate",
	)
}

func svcServerCliCliGotemplate() (*asset, error) {
	bytes, err := svcServerCliCliGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/cli/cli.gotemplate", size: 1043, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcServerRunGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x56\x4d\x6f\xdb\x38\x10\x3d\x8b\xbf\x62\x2a\xf4\x20\x03\x8e\x74\xd8\x5b\xd0\x1c\xda\xa4\xbb\x0d\xd0\xa4\x86\x63\xec\x9e\x69\x71\x4c\x13\x91\x49\xed\x90\xb2\x13\x08\xfe\xef\x8b\xa1\x3e\x2c\xb7\x8d\x77\xbb\x97\x44\xe2\xcc\x3c\xbe\x79\xf3\x21\x17\x05\xdc\x3a\x85\xa0\xd1\x22\xc9\x80\x0a\xd6\xaf\x10\xa8\xf1\x3e\x87\xbb\x6f\xf0\xf8\x6d\x05\x9f\xef\xee\x57\xb9\x28\x0a\x58\x22\x35\xd6\x1a\xab\x3b\x07\x38\x98\xaa\x02\xb7\x47\x3a\x90\x09\x08\x61\x6b\x3c\x6c\x4c\x85\xd1\xf9\x4f\x24\x6f\x9c\xbd\x86\xb6\xcd\xfb\xe7\xe3\x71\x62\x80\x3b\x19\x70\x6a\xe5\xf7\xe3\x51\x88\x5a\x96\xcf\x52\x23\x78\xa4\x3d\x92\x10\x66\x57\x3b\x0a\x90\x89\x24\xad\x9c\x4e\x45\x92\x5a\x0c\xfd\xbf\x62\x1b\x42\x3d\x7d\x2e\xea\x9a\xdc\x26\x15\x22\x29\x0a\xf8\x4d\xc1\x42\x52\x78\x15\x49\xaa\x9d\xd3\x15\xe6\xda\x55\xd2\xea\xdc\x91\x2e\x34\xd5\x65\xef\xb7\x62\xe2\x4f\x48\x7b\x53\xa2\x48\xea\x35\xa4\x6d\x9b\x2f\x3e\xdd\xc7\x8b\x17\x32\x6c\xe1\xea\x78\xe4\x5b\xda\x36\x3f\x3f\x84\xc2\xef\xcb\x37\x2c\x5b\x69\x55\x85\xe4\x53\x31\x13\x22\xca\x6c\x37\x46\x43\xe9\x6c\x90\xc6\x7a\x08\x5b\x04\xc2\xbf\x1b\x43\xa8\x60\x63\xb0\x52\x1e\x36\x8e\x60\xd0\x58\x0e\x0a\x84\xd7\x1a\x87\x68\x1f\xa8\x29\x03\xb4\x22\xf9\xb2\x5a\x2d\x3e\x2a\x45\x7c\x64\xac\x16\xc9\x1d\xae\x1b\x7d\x76\xf2\xc7\x72\x71\x3b\x3d\x38\x0a\xb1\x69\x6c\x09\x8f\x78\xf8\x6c\x55\xed\x8c\x0d\x3e\x9b\x81\xdf\x97\xf9\xf8\xce\xd0\x45\x01\x9f\x1a\x6f\x2c\x7a\x0f\xca\xed\xa4\xb1\xb9\x48\xf6\x92\x22\x21\x53\x22\xd4\xeb\xbc\x6d\xf3\x5e\xb1\xfc\x51\xee\xf0\x78\x7c\xea\xc8\x26\xad\x48\x92\xc1\xef\x06\x06\x11\xf2\x47\x3c\xf4\xfe\xd9\x4c\x24\x7c\xc5\x5f\x24\xeb\x41\x75\x38\x98\xb0\x85\x9d\x51\xaa\xc2\x83\x24\xf4\x39\x3c\x21\x8e\xd1\xc5\xd4\xa2\xdd\xcf\x6f\x60\xbc\xe1\x8a\xde\x3c\x13\xc9\xb1\x2b\xf1\x90\xdf\x79\x3e\x99\x48\xda\x96\xa4\xd5\x08\xef\x0d\x5c\xdf\xc0\x98\xd3\x03\x86\xad\x53\x9e\x2b\x29\x92\xa4\x6d\x57\xee\xab\x3b\x20\xc1\x7b\xd3\xa7\x3b\x02\xde\x44\xfd\x1e\xe4\x33\xb6\xed\x0f\xd6\x09\x91\xb6\x45\xab\x18\x6d\x26\x44\x82\xa3\xdc\xd7\x37\xe7\xfa\xb7\xff\x99\xd2\x0f\x97\x5d\x03\x00\x5c\xa0\x3a\x9f\x90\xe8\x65\x89\x35\xf0\x58\x61\xc9\x93\x7f\x6a\x82\x5f\x2c\xc7\x29\x9d\xef\xea\x71\x6a\xb3\xd1\x85\xd3\x27\x0c\x0d\x59\x18\xcf\xb8\x33\x79\xbf\x34\x16\x7c\x90\x14\x3c\x48\xb0\x78\x00\x9e\xe8\x7e\x0a\xe6\xa0\x97\x8b\xdb\xf1\x45\x5a\x05\x12\x14\xb7\x7c\x7f\xd6\x71\x0e\x5b\x64\xa4\x5a\x7a\x8f\x8a\x67\x8d\x87\x86\x9d\x2b\xa7\x35\x52\xd7\xff\xcb\xc6\x66\xe5\x46\xf7\x33\x35\xe3\x96\x3f\x2b\xc8\xf9\x7c\x74\x4a\x3d\x60\xb9\x95\xd6\x94\xb2\x3a\xb5\x10\x12\x95\xec\xbf\x93\xcf\x98\xb1\x19\x90\xc8\x51\x1f\x71\x6f\x03\x12\x35\x75\x18\x24\xc9\x45\xa2\xdd\x49\x9f\xd1\xfe\xa5\x3b\xc9\x18\xae\x8f\x8d\xb3\x0c\x95\xf1\x81\xd7\x72\x17\xc8\xd4\xb3\x48\x36\xa9\x9c\xce\x17\x64\x6c\xa8\x6c\x96\x06\x92\xd6\xf3\xea\x49\xe7\x90\x46\x45\xf8\x41\x2a\x45\xe9\x1c\xca\x8d\xce\xc7\xc5\xc0\xe0\xc9\x8e\x19\xb3\xb0\xc3\x48\xe2\x43\xf3\x12\x67\x72\x97\x77\x4c\xb2\xb4\x88\x30\xdd\x2e\x2d\xd2\x79\xe7\xde\xd3\xfc\x9d\x69\x44\x4b\x7e\x6f\x15\xbe\xcc\x2e\x84\x96\x3b\x55\x19\x8b\x6f\x23\xdc\x76\x0e\x97\x30\xf8\x8f\xa9\x2e\x60\x2c\x3a\x87\x4b\x18\xfe\x75\xb7\x76\xd5\xdb\x10\x4f\xd1\x7e\x09\x21\x90\x2c\x2f\x70\x58\xb1\x79\x16\xf5\x8d\x4d\xf1\xe1\xaa\xf3\xfc\x1a\x2b\xf8\xd1\xaa\x28\x74\x76\x56\x8d\x39\xec\x78\x3f\x0d\x0d\xc6\xfb\x1c\xc6\x5a\xfe\x42\xc9\x39\xf0\xbb\x8a\x0f\xdf\x06\x4e\x68\x3b\xac\x18\x5e\x51\x6c\x18\xdb\xed\x34\x91\xff\xce\x7a\x40\x9c\xc3\x76\x4a\x3a\xce\xe4\xff\x21\xcd\x81\xe9\x7c\xca\x79\xf8\x58\x31\x9b\xca\xce\x79\x94\x98\xb9\xc5\xd0\xf3\xc9\xd2\x50\xd6\x3f\x71\x36\x9b\xe8\xfb\xee\x06\xac\xa9\xe2\xb5\x63\x36\x48\xc4\xaf\xdd\xba\x11\x49\xdc\x7a\x89\xa7\xfd\x54\x12\x86\xea\xbe\x5d\xe7\x8a\xc4\x4d\xc0\x3f\x12\xc6\x39\xa1\x38\x25\xf5\x3a\x5f\xa2\x66\x46\xf4\xc6\x37\x30\xf3\x73\xf0\xb4\x3f\xeb\x06\x9f\x77\x5a\x56\x76\x2a\xdf\xb2\xb1\xef\xc4\xb9\x4a\xf8\x62\x58\xa0\x0f\x57\xdd\x36\x38\x0a\xf1\x4f\x00\x00\x00\xff\xff\xb8\x03\x8a\x80\xa2\x09\x00\x00")

func svcServerRunGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcServerRunGotemplate,
		"svc/server/run.gotemplate",
	)
}

func svcServerRunGotemplate() (*asset, error) {
	bytes, err := svcServerRunGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/run.gotemplate", size: 2466, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcTransport_grpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4d\x6f\xe3\x36\x10\x3d\x8b\xbf\x62\x6a\x2c\x0a\x6b\xe1\x48\x3d\x07\xc8\x65\x93\xed\x26\x68\xf3\x81\xd4\xd8\x1e\x16\x8b\x05\x2d\x8d\x25\xc2\x14\xa9\x90\x94\x13\x97\xd0\x7f\x2f\x86\x92\x6c\x25\x76\x1c\x1f\x02\xc4\xe2\x9b\x99\x37\xef\x0d\x47\x4a\x53\xb8\xd4\x39\x42\x81\x0a\x0d\x77\x98\xc3\x62\x03\xce\x34\xd6\x26\x70\x75\x0f\x77\xf7\x73\xf8\x7a\x75\x33\x4f\x58\x9a\xc2\x23\x9a\x46\x29\xa1\x8a\x0e\x00\xcf\x42\x4a\xd0\x6b\x34\xcf\x46\x38\x04\x57\x0a\x0b\x4b\x21\x31\x80\xbf\xa3\xb1\x42\xab\x73\xf0\x3e\xe9\xff\x6f\xdb\xd1\x01\x5c\x71\x87\xe3\x53\xfa\xdd\xb6\x8c\xd5\x3c\x5b\xf1\x02\xc1\xae\x33\x46\xf8\xf9\x90\x16\x6a\xa3\xd7\x22\x47\x0b\x16\xcd\x1a\xcd\x99\x15\x39\xc2\x42\xa8\x5c\xa8\xc2\xc2\x52\x1b\x70\x25\x42\xf1\xf8\x70\x09\xce\x70\x65\x6b\x6d\x5c\xe0\x72\xe3\xa0\x71\x42\x8a\xff\xd0\x06\xc8\xf6\x34\x2d\x4c\x9d\x25\xff\x84\x74\x09\x63\xa2\xa2\x87\x30\x65\xd1\x44\xa1\x4b\x4b\xe7\xea\x09\x8b\x26\x99\x56\x0e\x5f\xdc\x84\xb1\x68\x52\x68\x5d\x48\x4c\x0a\x2d\xb9\x2a\x12\x6d\x8a\x90\x22\xad\xd0\xf1\x9c\x3b\x4e\x18\x7a\xb0\xad\x00\x93\x42\xb8\xb2\x59\x24\x99\xae\xd2\x42\x9f\xad\x84\x4b\xe9\xef\x35\x05\x0a\x1b\x5a\x25\x36\x22\x43\x16\xd5\x0b\x98\x78\x9f\x3c\x7c\xb9\x09\xb4\x1e\xb8\x2b\xe1\xac\x6d\x27\x2c\x0e\xba\xdc\xf2\x15\x7e\x7b\x7c\xb8\xec\xd8\x43\xc5\x57\x68\x81\x83\x45\x07\x7a\x09\xa8\xf2\x5a\x0b\xe5\x2c\xf0\x35\x17\x92\x2f\x24\x02\xa7\xf3\x20\x8f\xf7\x49\x5f\x26\xb9\xe3\x15\xb6\xed\x20\xc1\xb2\x51\xd9\x9b\xcc\xd3\x5d\xaa\xaf\xc3\x7f\x31\xd4\x8b\xe4\x9d\x24\xe0\x59\xd4\x19\x74\x5f\x3b\xa1\x95\x85\xf3\x0b\xf8\xf1\xf3\x95\x2a\xbd\xe4\x1d\xc0\xb3\x28\x82\x43\xc7\x5f\x70\xa9\x0d\x4e\x07\x6d\xe7\xfa\xb2\x33\x22\x9e\xb1\xa8\x65\x91\x41\xd7\x18\x05\xbf\x53\x68\x17\xe0\x83\x8a\xde\xc3\x5c\xff\xad\x9f\xd1\xc0\x2b\x82\xd0\xb6\x2c\xf2\xde\x70\x55\x20\x7c\x12\x44\x6b\x7b\x7e\x8b\xae\xd4\xb9\x25\x44\xe4\xfd\x10\xfe\x49\xf4\x9d\x9d\xbf\xe1\x77\x87\xcf\xbd\x38\x2c\x8a\xa2\xad\x40\x89\xf7\xdb\x90\x41\xab\x19\x21\xae\x30\xd3\x79\xd0\x74\x84\x78\xc4\xa7\x06\x6d\x07\xf8\xaa\x0e\x02\x6c\xad\x95\xc5\x80\x78\x25\x69\x92\x24\xf4\x90\x84\xf0\xfe\x8c\xcc\x26\xe6\x2d\x6b\xc3\x64\xec\x04\x01\x51\xd5\x12\x2b\x24\xf3\x68\xf0\xbd\xff\xa6\x83\x14\x87\x9d\x13\xca\xa1\x59\xf2\x0c\x99\xdb\xd4\x38\xce\x63\x9d\x69\x32\x07\x9e\x7d\xac\xdf\x01\xf9\x00\xde\xe8\x77\xcd\x55\x2e\xd1\xb0\x1d\xf9\x8e\x79\x9f\x26\xdc\xe5\x51\x75\xa7\x77\x8d\x9c\xde\xc3\x87\x54\xc3\xb0\x4f\x2d\x7c\xde\x95\x8a\x77\xe9\xb7\xec\xa7\x99\x7b\x81\x7e\x07\x24\xfd\x08\xce\xc0\xe0\x13\x7c\x0e\xb7\x60\x87\xef\x1d\x9d\x6f\xea\x81\x54\x0c\xd3\x7d\x50\xe7\xea\x08\x35\x03\x34\x46\x53\x71\x16\xfd\xa2\xd4\x75\x78\x42\xb4\x69\xa6\xf6\xf4\xec\xee\x07\x4d\x0b\x71\x0b\x5c\x62\x16\x89\x65\x08\xfa\xed\x02\x94\x90\x94\x6a\xb8\x21\x4a\xc8\x90\x6f\x7c\x6b\x0c\xd6\xc9\x29\xd4\xe2\x19\x85\xb3\x96\x79\xdf\x19\x45\x36\xf5\x52\x77\x53\xfd\xb1\xce\x69\x0a\xc7\x2e\x00\x08\xda\x4b\x6f\x76\x72\x17\xd0\x23\xfe\x24\xa3\x5c\xc9\x1d\xd9\xb0\x46\x43\x5b\x2d\x0c\x7a\xb7\xcb\xf6\xe7\xcd\xf4\x99\x9d\x06\x0e\x8d\x45\x73\x96\xeb\x8a\x0b\x75\x0c\x9c\xc0\x83\x11\x15\x37\x42\x6e\x28\x64\xd9\x48\x10\x2a\x2c\xd4\xd1\x6a\x3c\xd6\xc7\xf4\xd7\xfe\x94\x50\x2f\x8f\xf8\xb4\x9b\x4a\x4f\x23\x31\xfa\x35\xb6\x9e\x46\xea\xfc\x62\x88\x39\x64\xcf\xde\x78\x8d\xfc\x7c\x3a\xe2\x54\xb7\x5e\x4e\x72\xea\xe8\x26\x3a\x68\x55\x17\x31\x40\xde\xf3\xea\x63\x17\xfa\x12\xc1\xb3\x23\xce\xd6\x72\x73\x92\x55\x47\x1b\x39\xe4\xd5\x96\xc1\x89\x66\xd9\x9a\x54\x1c\xa2\x4e\xbb\x4d\x23\xbf\x6c\x7d\xc8\xb0\x6b\x94\x35\x1a\xcb\xba\x1e\xf6\x5e\x7d\x87\x77\x51\x95\x6f\x91\xc9\xed\x55\xfc\x16\x40\x74\x69\xa3\xae\x66\xb0\x0e\x94\xc3\x10\x54\x79\xd8\x11\x62\x09\xeb\xf1\xce\xe8\xbe\x43\x10\x56\xb8\x09\x6e\xe7\x39\x7d\x13\x6a\x57\x92\xc4\x43\x15\x5a\xd0\x15\x77\x30\x5d\xc5\xf0\x5c\x8a\xac\x0c\x50\x29\x41\x92\x5d\x7d\x16\xae\xf2\xf0\xd2\xa1\xcf\xa8\xe4\x92\x2b\xad\x44\xc6\xe5\x35\xf2\x1c\xcd\x5f\xb8\xa1\xaf\x14\xd7\x17\xb2\xba\x1b\x19\xe1\x20\xe3\x0a\x16\x38\xa4\xc8\x32\xb4\x16\x73\xaa\x8d\xc2\x95\x68\xfa\xca\x74\x4e\x52\x5c\x6c\x7b\xfd\x57\xb8\xf2\x3b\x97\x0d\x76\x2b\x91\x7a\xfd\xf1\xc7\xcf\xf8\x43\xe0\x3b\xec\xa6\xab\x78\x97\x21\xbc\x5b\xb7\xd6\x65\xee\x85\xb5\xec\xff\x00\x00\x00\xff\xff\x80\xff\xee\x41\x39\x0b\x00\x00")

func svcTransport_grpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_grpcGotemplate,
		"svc/transport_grpc.gotemplate",
	)
}

func svcTransport_grpcGotemplate() (*asset, error) {
	bytes, err := svcTransport_grpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_grpc.gotemplate", size: 2873, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcTransport_httpGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x1a\x29\x91\xe2\x05\xac\xf0\x31\x08\x93\xb3\xce\x1f\x1a\xeb\x76\xa7\x61\x80\x37\xa7\xae\xb2\x03\x52\xed\x42\xff\x8c\xa1\x15\x67\xb5\xd7\x93\xfa\x20\x3b\xbd\x9c\xa3\x9b\x53\x89\x77\x6f\x85\x18\xa9\x9a\xdc\xcd\xe5\xb0\x1b\x64\xd5\x88\x65\xce\xa3\xb4\x26\x69\xcb\xf9\xba\xa1\x75\x78\xda\xe1\x5f\x78\xfe\x1b\x49\x11\xcb\x2f\x00\x00\xff\xff\xdd\x3a\x4a\x8f\x6a\x00\x00\x00")

func svcTransport_httpGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_httpGotemplate,
		"svc/transport_http.gotemplate",
	)
}

func svcTransport_httpGotemplate() (*asset, error) {
	bytes, err := svcTransport_httpGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_http.gotemplate", size: 106, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cmd/NAME/main.gotemplate": cmdNameMainGotemplate,
	"cmd/NAME-server/main.gotemplate": cmdNameServerMainGotemplate,
	"datastore/NAME_errors.gotemplate": datastoreName_errorsGotemplate,
	"datastore/NAME_manager.gotemplate": datastoreName_managerGotemplate,
	"datastore/NAME_mongo_manager.gotemplate": datastoreName_mongo_managerGotemplate,
	"datastore/datastore.gotemplate": datastoreDatastoreGotemplate,
	"datastore/mongo.gotemplate": datastoreMongoGotemplate,
	"handlers/handlers.gotemplate": handlersHandlersGotemplate,
	"handlers/hooks.gotemplate": handlersHooksGotemplate,
	"handlers/middlewares.gotemplate": handlersMiddlewaresGotemplate,
	"svc/client/cli/handlers/handlers.gotemplate": svcClientCliHandlersHandlersGotemplate,
	"svc/client/grpc/client.gotemplate": svcClientGrpcClientGotemplate,
	"svc/client/http/client.gotemplate": svcClientHttpClientGotemplate,
	"svc/endpoints.gotemplate": svcEndpointsGotemplate,
	"svc/server/cli/cli.gotemplate": svcServerCliCliGotemplate,
	"svc/server/run.gotemplate": svcServerRunGotemplate,
	"svc/transport_grpc.gotemplate": svcTransport_grpcGotemplate,
	"svc/transport_http.gotemplate": svcTransport_httpGotemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"cmd": &bintree{nil, map[string]*bintree{
		"NAME": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameMainGotemplate, map[string]*bintree{}},
		}},
		"NAME-server": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameServerMainGotemplate, map[string]*bintree{}},
		}},
	}},
	"datastore": &bintree{nil, map[string]*bintree{
		"NAME_errors.gotemplate": &bintree{datastoreName_errorsGotemplate, map[string]*bintree{}},
		"NAME_manager.gotemplate": &bintree{datastoreName_managerGotemplate, map[string]*bintree{}},
		"NAME_mongo_manager.gotemplate": &bintree{datastoreName_mongo_managerGotemplate, map[string]*bintree{}},
		"datastore.gotemplate": &bintree{datastoreDatastoreGotemplate, map[string]*bintree{}},
		"mongo.gotemplate": &bintree{datastoreMongoGotemplate, map[string]*bintree{}},
	}},
	"handlers": &bintree{nil, map[string]*bintree{
		"handlers.gotemplate": &bintree{handlersHandlersGotemplate, map[string]*bintree{}},
		"hooks.gotemplate": &bintree{handlersHooksGotemplate, map[string]*bintree{}},
		"middlewares.gotemplate": &bintree{handlersMiddlewaresGotemplate, map[string]*bintree{}},
	}},
	"svc": &bintree{nil, map[string]*bintree{
		"client": &bintree{nil, map[string]*bintree{
			"cli": &bintree{nil, map[string]*bintree{
				"handlers": &bintree{nil, map[string]*bintree{
					"handlers.gotemplate": &bintree{svcClientCliHandlersHandlersGotemplate, map[string]*bintree{}},
				}},
			}},
			"grpc": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientGrpcClientGotemplate, map[string]*bintree{}},
			}},
			"http": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientHttpClientGotemplate, map[string]*bintree{}},
			}},
		}},
		"endpoints.gotemplate": &bintree{svcEndpointsGotemplate, map[string]*bintree{}},
		"server": &bintree{nil, map[string]*bintree{
			"cli": &bintree{nil, map[string]*bintree{
				"cli.gotemplate": &bintree{svcServerCliCliGotemplate, map[string]*bintree{}},
			}},
			"run.gotemplate": &bintree{svcServerRunGotemplate, map[string]*bintree{}},
		}},
		"transport_grpc.gotemplate": &bintree{svcTransport_grpcGotemplate, map[string]*bintree{}},
		"transport_http.gotemplate": &bintree{svcTransport_httpGotemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

